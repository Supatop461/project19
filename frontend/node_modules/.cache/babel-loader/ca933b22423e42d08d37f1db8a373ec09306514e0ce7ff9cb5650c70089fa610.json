{"ast":null,"code":"// src/lib/api.js\n// NOTE: รวมจุดศูนย์กลางเรียก API ฝั่ง frontend ให้สะอาด/ปลอดภัย/ยืดหยุ่น\n\nimport axios from 'axios';\n\n/* -----------------------------------------------------------\r\n * 1) หา baseURL ให้ทำงานได้ทั้ง CRA และ Vite\r\n *    - Vite:  ใช้ import.meta.env.VITE_API_BASE\r\n *    - CRA:   ใช้ process.env.REACT_APP_API_BASE\r\n *    - ถ้าไม่ตั้ง env: ตกลงมาใช้ 'http://localhost:3001/api'\r\n * --------------------------------------------------------- */\nconst VITE = typeof import.meta !== 'undefined' && import.meta.env || {};\nconst BASE_URL = VITE.VITE_API_BASE || process.env.REACT_APP_API_BASE || 'http://localhost:3001/api';\n\n/* -----------------------------------------------------------\r\n * 2) สร้าง axios instance เดียวใช้ทั่วแอป\r\n *    - baseURL: ชี้ไปยัง backend /api\r\n *    - (ถ้าใช้ cookie auth ให้เปิด withCredentials)\r\n * --------------------------------------------------------- */\nexport const api = axios.create({\n  baseURL: BASE_URL\n  // withCredentials: true,\n});\n\n/* -----------------------------------------------------------\r\n * 3) Interceptor: แนบ Bearer token อัตโนมัติถ้ามี\r\n *    - อ่าน token จาก localStorage ('token')\r\n *    - ทุก request จะมี Authorization: Bearer <token>\r\n * --------------------------------------------------------- */\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\n/* -----------------------------------------------------------\r\n * 4) ฟังก์ชันเรียก API สำหรับจัดการ Options/Values/Variants (Admin)\r\n *    - ทุกฟังก์ชันคืน r.data เพื่อให้ component ใช้ง่าย\r\n * --------------------------------------------------------- */\n\n// โหลด meta ทั้งชุด: product + options(+values) + variants(+combos)\nexport const getProductMeta = productId => api.get(`/admin/products/${productId}/variants`).then(r => r.data);\n\n// สร้าง option ใหม่ (เช่น “สี”, “ขนาด”)\nexport const addOption = (productId, option_name) => api.post(`/admin/products/${productId}/options`, {\n  option_name\n}).then(r => r.data);\n\n// เปลี่ยนชื่อ option ภายหลัง\nexport const renameOption = (productId, optionId, option_name) => api.put(`/admin/products/${productId}/options/${optionId}`, {\n  option_name\n}).then(r => r.data);\n\n// เพิ่ม value ให้ option (เช่น “แดง”, “XL”)\nexport const addValue = (option_id, value_name) => api.post(`/admin/options/${option_id}/values`, {\n  value_name\n}).then(r => r.data);\n\n// เปลี่ยนชื่อ value ภายหลัง\nexport const renameValue = (valueId, value_name) => api.put(`/admin/values/${valueId}`, {\n  value_name\n}).then(r => r.data);\n\n// สร้าง/อัปเดต variant (รวม combo ของ option-values)\nexport const createVariant = (productId, payload) => api.post(`/admin/products/${productId}/variants`, payload).then(r => r.data);\n\n// (ทางเลือก) สร้าง variants ครบทุกคอมโบอัตโนมัติ\nexport const generateVariants = (productId, body) => api.post(`/admin/products/${productId}/variants/generate`, body).then(r => r.data);\n\n// อัปเดตค่าเฉพาะของ variant (เช่น price_override, stock, sku)\nexport const updateVariant = (variantId, patch) => api.put(`/admin/variants/${variantId}`, patch).then(r => r.data);\n\n// ลบ variant\nexport const deleteVariant = variantId => api.delete(`/admin/variants/${variantId}`).then(r => r.data);\n\n// ลบทั้ง option (รวม mapping/values ที่เกี่ยวข้อง)\nexport const deleteOption = option_id => api.delete(`/admin/options/${option_id}`).then(r => r.data);\n\n// ลบ value (ถ้ายังผูกกับ variant อยู่ backend จะกันไว้)\nexport const deleteValue = value_id => api.delete(`/admin/values/${value_id}`).then(r => r.data);","map":{"version":3,"names":["axios","VITE","import","meta","env","BASE_URL","VITE_API_BASE","process","REACT_APP_API_BASE","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","getProductMeta","productId","get","then","r","data","addOption","option_name","post","renameOption","optionId","put","addValue","option_id","value_name","renameValue","valueId","createVariant","payload","generateVariants","body","updateVariant","variantId","patch","deleteVariant","delete","deleteOption","deleteValue","value_id"],"sources":["D:/project19/frontend/src/lib/api.js"],"sourcesContent":["// src/lib/api.js\r\n// NOTE: รวมจุดศูนย์กลางเรียก API ฝั่ง frontend ให้สะอาด/ปลอดภัย/ยืดหยุ่น\r\n\r\nimport axios from 'axios';\r\n\r\n/* -----------------------------------------------------------\r\n * 1) หา baseURL ให้ทำงานได้ทั้ง CRA และ Vite\r\n *    - Vite:  ใช้ import.meta.env.VITE_API_BASE\r\n *    - CRA:   ใช้ process.env.REACT_APP_API_BASE\r\n *    - ถ้าไม่ตั้ง env: ตกลงมาใช้ 'http://localhost:3001/api'\r\n * --------------------------------------------------------- */\r\nconst VITE = (typeof import.meta !== 'undefined' && import.meta.env) || {};\r\nconst BASE_URL =\r\n  VITE.VITE_API_BASE ||\r\n  process.env.REACT_APP_API_BASE ||\r\n  'http://localhost:3001/api';\r\n\r\n/* -----------------------------------------------------------\r\n * 2) สร้าง axios instance เดียวใช้ทั่วแอป\r\n *    - baseURL: ชี้ไปยัง backend /api\r\n *    - (ถ้าใช้ cookie auth ให้เปิด withCredentials)\r\n * --------------------------------------------------------- */\r\nexport const api = axios.create({\r\n  baseURL: BASE_URL,\r\n  // withCredentials: true,\r\n});\r\n\r\n/* -----------------------------------------------------------\r\n * 3) Interceptor: แนบ Bearer token อัตโนมัติถ้ามี\r\n *    - อ่าน token จาก localStorage ('token')\r\n *    - ทุก request จะมี Authorization: Bearer <token>\r\n * --------------------------------------------------------- */\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\n/* -----------------------------------------------------------\r\n * 4) ฟังก์ชันเรียก API สำหรับจัดการ Options/Values/Variants (Admin)\r\n *    - ทุกฟังก์ชันคืน r.data เพื่อให้ component ใช้ง่าย\r\n * --------------------------------------------------------- */\r\n\r\n// โหลด meta ทั้งชุด: product + options(+values) + variants(+combos)\r\nexport const getProductMeta = (productId) =>\r\n  api.get(`/admin/products/${productId}/variants`).then((r) => r.data);\r\n\r\n// สร้าง option ใหม่ (เช่น “สี”, “ขนาด”)\r\nexport const addOption = (productId, option_name) =>\r\n  api.post(`/admin/products/${productId}/options`, { option_name }).then((r) => r.data);\r\n\r\n// เปลี่ยนชื่อ option ภายหลัง\r\nexport const renameOption = (productId, optionId, option_name) =>\r\n  api.put(`/admin/products/${productId}/options/${optionId}`, { option_name }).then((r) => r.data);\r\n\r\n// เพิ่ม value ให้ option (เช่น “แดง”, “XL”)\r\nexport const addValue = (option_id, value_name) =>\r\n  api.post(`/admin/options/${option_id}/values`, { value_name }).then((r) => r.data);\r\n\r\n// เปลี่ยนชื่อ value ภายหลัง\r\nexport const renameValue = (valueId, value_name) =>\r\n  api.put(`/admin/values/${valueId}`, { value_name }).then((r) => r.data);\r\n\r\n// สร้าง/อัปเดต variant (รวม combo ของ option-values)\r\nexport const createVariant = (productId, payload) =>\r\n  api.post(`/admin/products/${productId}/variants`, payload).then((r) => r.data);\r\n\r\n// (ทางเลือก) สร้าง variants ครบทุกคอมโบอัตโนมัติ\r\nexport const generateVariants = (productId, body) =>\r\n  api.post(`/admin/products/${productId}/variants/generate`, body).then((r) => r.data);\r\n\r\n// อัปเดตค่าเฉพาะของ variant (เช่น price_override, stock, sku)\r\nexport const updateVariant = (variantId, patch) =>\r\n  api.put(`/admin/variants/${variantId}`, patch).then((r) => r.data);\r\n\r\n// ลบ variant\r\nexport const deleteVariant = (variantId) =>\r\n  api.delete(`/admin/variants/${variantId}`).then((r) => r.data);\r\n\r\n// ลบทั้ง option (รวม mapping/values ที่เกี่ยวข้อง)\r\nexport const deleteOption = (option_id) =>\r\n  api.delete(`/admin/options/${option_id}`).then((r) => r.data);\r\n\r\n// ลบ value (ถ้ายังผูกกับ variant อยู่ backend จะกันไว้)\r\nexport const deleteValue = (value_id) =>\r\n  api.delete(`/admin/values/${value_id}`).then((r) => r.data);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}