{"ast":null,"code":"// backend/routes/adminVariants.js\n// Minimal variants endpoints so the frontend can save without 404.\n// - Accepts items[] from VariantsManager\n// - Inserts images into product_images (keeps primary order per product)\n// - Returns { ok: true, product_id, images_inserted, items_count }\n\nconst express = require('express');\nconst router = express.Router();\nconst db = require('../db');\nconst asInt = v => v === null || v === undefined || v === '' ? null : parseInt(v, 10);\nfunction normalizeImagePayload(it) {\n  var _ref, _it$alt_text;\n  if (!it) return null;\n  if (typeof it === 'string') return {\n    url: it,\n    alt_text: null,\n    is_primary: false,\n    position: null,\n    variant_id: null\n  };\n  const url = String(it.url || it.image_url || it.path || '').trim();\n  if (!url) return null;\n  return {\n    url,\n    alt_text: (_ref = (_it$alt_text = it.alt_text) !== null && _it$alt_text !== void 0 ? _it$alt_text : it.alt) !== null && _ref !== void 0 ? _ref : null,\n    is_primary: !!it.is_primary,\n    position: Number.isFinite(+it.position) ? asInt(it.position) : null,\n    variant_id: it.variant_id === undefined || it.variant_id === null ? null : asInt(it.variant_id)\n  };\n}\nasync function productExists(productId) {\n  const q = await db.query(`SELECT 1 FROM products WHERE product_id = $1`, [productId]);\n  return q.rowCount > 0;\n}\nasync function clearPrimaryInScope(productId, variantId) {\n  if (variantId === null) {\n    await db.query(`UPDATE product_images SET is_primary = FALSE WHERE product_id = $1 AND variant_id IS NULL`, [productId]);\n  } else {\n    await db.query(`UPDATE product_images SET is_primary = FALSE WHERE product_id = $1 AND variant_id = $2`, [productId, variantId]);\n  }\n}\n\n// core handler used by both paths\nasync function handleGenerate(req, res) {\n  var _req$body;\n  const productId = asInt(req.params.productId);\n  const items = Array.isArray((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.items) ? req.body.items : [];\n  if (!productId) return res.status(400).json({\n    error: 'invalid productId'\n  });\n  try {\n    var _posQ$rows, _posQ$rows$;\n    if (!(await productExists(productId))) {\n      return res.status(404).json({\n        error: 'product_not_found'\n      });\n    }\n\n    // collect all images (flat)\n    const images = [];\n    for (const it of items) {\n      const imgs = Array.isArray(it === null || it === void 0 ? void 0 : it.images) ? it.images : [];\n      for (const im of imgs) {\n        const n = normalizeImagePayload(im) || normalizeImagePayload(String(im || ''));\n        if (n) {\n          var _n$variant_id;\n          // keep mapping with variant scope if present (we don't create variants here)\n          images.push({\n            ...n,\n            variant_id: (_n$variant_id = n.variant_id) !== null && _n$variant_id !== void 0 ? _n$variant_id : null\n          });\n        }\n      }\n    }\n    await db.query('BEGIN');\n\n    // base position for this product (continue after max)\n    const posQ = await db.query(`SELECT COALESCE(MAX(position), 0) AS max_pos FROM product_images WHERE product_id = $1`, [productId]);\n    let basePos = Number(((_posQ$rows = posQ.rows) === null || _posQ$rows === void 0 ? void 0 : (_posQ$rows$ = _posQ$rows[0]) === null || _posQ$rows$ === void 0 ? void 0 : _posQ$rows$.max_pos) || 0);\n\n    // If any image in a scope is marked primary, clear previous primary in that scope.\n    const scopesToClear = new Set();\n    images.forEach(x => {\n      var _x$variant_id;\n      if (x.is_primary) scopesToClear.add(String((_x$variant_id = x.variant_id) !== null && _x$variant_id !== void 0 ? _x$variant_id : 'null'));\n    });\n    for (const key of scopesToClear) {\n      await clearPrimaryInScope(productId, key === 'null' ? null : asInt(key));\n    }\n    let inserted = 0;\n    for (const img of images) {\n      let pos = img.position;\n      if (!(Number.isInteger(pos) && pos > 0)) {\n        pos = ++basePos;\n      } else if (pos > basePos) {\n        basePos = pos;\n      }\n      await db.query(`INSERT INTO product_images (product_id, variant_id, url, alt_text, is_primary, position)\n         VALUES ($1, $2, $3, $4, $5, $6)`, [productId, img.variant_id, img.url, img.alt_text, img.is_primary, pos]);\n      inserted++;\n    }\n    await db.query('COMMIT');\n\n    // NOTE: This minimal endpoint does NOT create variant rows.\n    // It exists to unblock the UI and persist images. You can extend here later.\n    return res.json({\n      ok: true,\n      product_id: productId,\n      items_count: items.length,\n      images_inserted: inserted,\n      note: 'variants generation is a no-op for now; images saved.'\n    });\n  } catch (err) {\n    await db.query('ROLLBACK');\n    console.error('adminVariants.generate error:', err);\n    return res.status(500).json({\n      error: 'failed_to_generate_variants'\n    });\n  }\n}\n\n/**\r\n * Mount under /api/admin/products -> /api/admin/products/:productId/variants/generate\r\n * (server.js จะ mount router นี้ซ้ำที่ base นี้)\r\n */\nrouter.post('/:productId/variants/generate', handleGenerate);\n\n/**\r\n * Back-compat path that the old UI might call when mounted under /api/admin/variants:\r\n * /api/admin/variants/products/:productId/variants/generate\r\n */\nrouter.post('/products/:productId/variants/generate', handleGenerate);\n\n/**\r\n * Another alias used earlier by UI: /api/variants/products/:productId/upsert-batch\r\n * When server mounts at /api/admin/variants, this becomes /api/admin/variants/products/:productId/upsert-batch\r\n * เราทำ alias ให้มาที่ handler เดียวกัน\r\n */\nrouter.post('/products/:productId/upsert-batch', handleGenerate);\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","db","asInt","v","undefined","parseInt","normalizeImagePayload","it","_ref","_it$alt_text","url","alt_text","is_primary","position","variant_id","String","image_url","path","trim","alt","Number","isFinite","productExists","productId","q","query","rowCount","clearPrimaryInScope","variantId","handleGenerate","req","res","_req$body","params","items","Array","isArray","body","status","json","error","_posQ$rows","_posQ$rows$","images","imgs","im","n","_n$variant_id","push","posQ","basePos","rows","max_pos","scopesToClear","Set","forEach","x","_x$variant_id","add","key","inserted","img","pos","isInteger","ok","product_id","items_count","length","images_inserted","note","err","console","post","module","exports"],"sources":["D:/project19/frontend/src/admin/VariantsManager.js"],"sourcesContent":["// backend/routes/adminVariants.js\r\n// Minimal variants endpoints so the frontend can save without 404.\r\n// - Accepts items[] from VariantsManager\r\n// - Inserts images into product_images (keeps primary order per product)\r\n// - Returns { ok: true, product_id, images_inserted, items_count }\r\n\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../db');\r\n\r\nconst asInt = (v) => (v === null || v === undefined || v === '' ? null : parseInt(v, 10));\r\n\r\nfunction normalizeImagePayload(it) {\r\n  if (!it) return null;\r\n  if (typeof it === 'string') return { url: it, alt_text: null, is_primary: false, position: null, variant_id: null };\r\n  const url = String(it.url || it.image_url || it.path || '').trim();\r\n  if (!url) return null;\r\n  return {\r\n    url,\r\n    alt_text: it.alt_text ?? it.alt ?? null,\r\n    is_primary: !!it.is_primary,\r\n    position: Number.isFinite(+it.position) ? asInt(it.position) : null,\r\n    variant_id: (it.variant_id === undefined || it.variant_id === null) ? null : asInt(it.variant_id),\r\n  };\r\n}\r\n\r\nasync function productExists(productId) {\r\n  const q = await db.query(`SELECT 1 FROM products WHERE product_id = $1`, [productId]);\r\n  return q.rowCount > 0;\r\n}\r\n\r\nasync function clearPrimaryInScope(productId, variantId) {\r\n  if (variantId === null) {\r\n    await db.query(\r\n      `UPDATE product_images SET is_primary = FALSE WHERE product_id = $1 AND variant_id IS NULL`,\r\n      [productId]\r\n    );\r\n  } else {\r\n    await db.query(\r\n      `UPDATE product_images SET is_primary = FALSE WHERE product_id = $1 AND variant_id = $2`,\r\n      [productId, variantId]\r\n    );\r\n  }\r\n}\r\n\r\n// core handler used by both paths\r\nasync function handleGenerate(req, res) {\r\n  const productId = asInt(req.params.productId);\r\n  const items = Array.isArray(req.body?.items) ? req.body.items : [];\r\n  if (!productId) return res.status(400).json({ error: 'invalid productId' });\r\n\r\n  try {\r\n    if (!(await productExists(productId))) {\r\n      return res.status(404).json({ error: 'product_not_found' });\r\n    }\r\n\r\n    // collect all images (flat)\r\n    const images = [];\r\n    for (const it of items) {\r\n      const imgs = Array.isArray(it?.images) ? it.images : [];\r\n      for (const im of imgs) {\r\n        const n = normalizeImagePayload(im) || normalizeImagePayload(String(im || ''));\r\n        if (n) {\r\n          // keep mapping with variant scope if present (we don't create variants here)\r\n          images.push({ ...n, variant_id: n.variant_id ?? null });\r\n        }\r\n      }\r\n    }\r\n\r\n    await db.query('BEGIN');\r\n\r\n    // base position for this product (continue after max)\r\n    const posQ = await db.query(\r\n      `SELECT COALESCE(MAX(position), 0) AS max_pos FROM product_images WHERE product_id = $1`,\r\n      [productId]\r\n    );\r\n    let basePos = Number(posQ.rows?.[0]?.max_pos || 0);\r\n\r\n    // If any image in a scope is marked primary, clear previous primary in that scope.\r\n    const scopesToClear = new Set();\r\n    images.forEach((x) => { if (x.is_primary) scopesToClear.add(String(x.variant_id ?? 'null')); });\r\n    for (const key of scopesToClear) {\r\n      await clearPrimaryInScope(productId, key === 'null' ? null : asInt(key));\r\n    }\r\n\r\n    let inserted = 0;\r\n    for (const img of images) {\r\n      let pos = img.position;\r\n      if (!(Number.isInteger(pos) && pos > 0)) {\r\n        pos = ++basePos;\r\n      } else if (pos > basePos) {\r\n        basePos = pos;\r\n      }\r\n      await db.query(\r\n        `INSERT INTO product_images (product_id, variant_id, url, alt_text, is_primary, position)\r\n         VALUES ($1, $2, $3, $4, $5, $6)`,\r\n        [productId, img.variant_id, img.url, img.alt_text, img.is_primary, pos]\r\n      );\r\n      inserted++;\r\n    }\r\n\r\n    await db.query('COMMIT');\r\n\r\n    // NOTE: This minimal endpoint does NOT create variant rows.\r\n    // It exists to unblock the UI and persist images. You can extend here later.\r\n    return res.json({\r\n      ok: true,\r\n      product_id: productId,\r\n      items_count: items.length,\r\n      images_inserted: inserted,\r\n      note: 'variants generation is a no-op for now; images saved.',\r\n    });\r\n  } catch (err) {\r\n    await db.query('ROLLBACK');\r\n    console.error('adminVariants.generate error:', err);\r\n    return res.status(500).json({ error: 'failed_to_generate_variants' });\r\n  }\r\n}\r\n\r\n/**\r\n * Mount under /api/admin/products -> /api/admin/products/:productId/variants/generate\r\n * (server.js จะ mount router นี้ซ้ำที่ base นี้)\r\n */\r\nrouter.post('/:productId/variants/generate', handleGenerate);\r\n\r\n/**\r\n * Back-compat path that the old UI might call when mounted under /api/admin/variants:\r\n * /api/admin/variants/products/:productId/variants/generate\r\n */\r\nrouter.post('/products/:productId/variants/generate', handleGenerate);\r\n\r\n/**\r\n * Another alias used earlier by UI: /api/variants/products/:productId/upsert-batch\r\n * When server mounts at /api/admin/variants, this becomes /api/admin/variants/products/:productId/upsert-batch\r\n * เราทำ alias ให้มาที่ handler เดียวกัน\r\n */\r\nrouter.post('/products/:productId/upsert-batch', handleGenerate);\r\n\r\nmodule.exports = router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}