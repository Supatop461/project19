{"ast":null,"code":"var _jsxFileName = \"D:\\\\project19\\\\frontend\\\\src\\\\components\\\\ThaiAddressPicker.js\",\n  _s = $RefreshSig$();\n// src/components/ThaiAddressPicker.js\n// หน้าที่: ให้ผู้ใช้เลือก จังหวัด → อำเภอ → ตำบล (โหลดทีละชั้นจาก public/data/*)\n// จุดสำคัญ:\n//  - กรอง \"อำเภอ\" ด้วย province_code และ \"ตำบล\" ด้วย district_code เสมอ\n//  - onChange() จะคืนทั้ง \"ชื่อ\" และ \"code\" ของแต่ละระดับ + เติมรหัสไปรษณีย์ให้\n//  - รองรับเคสที่ value เดิมมีแค่ \"ชื่อ\" (ไม่มี code) โดย map ชื่อ → code ให้เอง\n\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThaiAddressPicker({\n  value,\n  // ฟอร์มหลัก { province, district, subdistrict, postal_code, (อาจยังไม่มี *_code) }\n  onChange,\n  // ฟังก์ชันรับ patch แล้วรวมเข้าฟอร์มหลัก\n  basePath = '/data',\n  // ตำแหน่งไฟล์ JSON ใน /public (ต้องมี /data/provinces.json, /data/districts/{prov}.json, /data/subdistricts/{dist}.json)\n  disabled = false\n}) {\n  _s();\n  var _subdistricts$find;\n  /* ==================== สเตตของรายการแต่ละชั้น ==================== */\n  const [provinces, setProvinces] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [subdistricts, setSubdists] = useState([]);\n\n  /* ==================== สถานะโหลดของแต่ละชั้น ==================== */\n  const [loadingProv, setLoadingProv] = useState(true);\n  const [loadingDist, setLoadingDist] = useState(false);\n  const [loadingSub, setLoadingSub] = useState(false);\n\n  /* ==================== แคชกันโหลดซ้ำ ==================== */\n  const cacheRef = useRef({\n    districts: {},\n    subdistricts: {}\n  });\n\n  /* ==================== helper ==================== */\n  const patch = obj => onChange && onChange(obj);\n\n  /* [LOAD-1] โหลด \"จังหวัด\" ตอน mount */\n  useEffect(() => {\n    let alive = true;\n    (async () => {\n      setLoadingProv(true);\n      try {\n        const res = await fetch(`${basePath}/provinces.json`, {\n          cache: 'force-cache'\n        });\n        const data = await res.json();\n        if (!alive) return;\n        // คาดว่าแต่ละแถวมี { code: '10', name_th: 'กรุงเทพมหานคร' }\n        setProvinces(Array.isArray(data) ? data : []);\n      } catch (e) {\n        console.error('[ThaiAddressPicker] load provinces error:', e);\n        if (alive) setProvinces([]);\n      } finally {\n        if (alive) setLoadingProv(false);\n      }\n    })();\n    return () => {\n      alive = false;\n    };\n  }, [basePath]);\n\n  /* === map \"ชื่อ\" → \"code\" เมื่อ value เดิมไม่มี code === */\n  const currentProvinceCode = useMemo(() => {\n    if (value !== null && value !== void 0 && value.province_code) return String(value.province_code);\n    const p = provinces.find(x => x.name_th === (value === null || value === void 0 ? void 0 : value.province));\n    return p ? String(p.code) : '';\n  }, [value === null || value === void 0 ? void 0 : value.province_code, value === null || value === void 0 ? void 0 : value.province, provinces]);\n  const currentDistrictCode = useMemo(() => {\n    if (value !== null && value !== void 0 && value.district_code) return String(value.district_code);\n    const d = districts.find(x => x.name_th === (value === null || value === void 0 ? void 0 : value.district));\n    return d ? String(d.code) : '';\n  }, [value === null || value === void 0 ? void 0 : value.district_code, value === null || value === void 0 ? void 0 : value.district, districts]);\n\n  /* [LOAD-2] เมื่อ \"จังหวัด\" เปลี่ยน → โหลด \"อำเภอ\" ของจังหวัดนั้น */\n  useEffect(() => {\n    const provCode = currentProvinceCode;\n    if (!provCode) {\n      setDistricts([]);\n      setSubdists([]);\n      return;\n    }\n    if (cacheRef.current.districts[provCode]) {\n      setDistricts(cacheRef.current.districts[provCode]);\n      return;\n    }\n    let alive = true;\n    (async () => {\n      setLoadingDist(true);\n      try {\n        const res = await fetch(`${basePath}/districts/${provCode}.json`, {\n          cache: 'force-cache'\n        });\n        const data = await res.json();\n        if (!alive) return;\n        // คาดว่าแต่ละแถวมี { code:'1001', name_th:'พระนคร' }\n        cacheRef.current.districts[provCode] = Array.isArray(data) ? data : [];\n        setDistricts(cacheRef.current.districts[provCode]);\n      } catch (e) {\n        console.error('[ThaiAddressPicker] load districts error:', e);\n        if (alive) setDistricts([]);\n      } finally {\n        if (alive) setLoadingDist(false);\n      }\n    })();\n    return () => {\n      alive = false;\n    };\n  }, [currentProvinceCode, basePath]);\n\n  /* [LOAD-3] เมื่อ \"อำเภอ\" เปลี่ยน → โหลด \"ตำบล\" ของอำเภอนั้น */\n  useEffect(() => {\n    const distCode = currentDistrictCode;\n    if (!distCode) {\n      setSubdists([]);\n      return;\n    }\n    if (cacheRef.current.subdistricts[distCode]) {\n      setSubdists(cacheRef.current.subdistricts[distCode]);\n      return;\n    }\n    let alive = true;\n    (async () => {\n      setLoadingSub(true);\n      try {\n        const res = await fetch(`${basePath}/subdistricts/${distCode}.json`, {\n          cache: 'force-cache'\n        });\n        const data = await res.json();\n        if (!alive) return;\n        // คาดว่าแต่ละแถวมี { code:'100101', name_th:'พระบรมมหาราชวัง', zip_code:'10200' }\n        cacheRef.current.subdistricts[distCode] = Array.isArray(data) ? data : [];\n        setSubdists(cacheRef.current.subdistricts[distCode]);\n      } catch (e) {\n        console.error('[ThaiAddressPicker] load subdistricts error:', e);\n        if (alive) setSubdists([]);\n      } finally {\n        if (alive) setLoadingSub(false);\n      }\n    })();\n    return () => {\n      alive = false;\n    };\n  }, [currentDistrictCode, basePath]);\n\n  /* ==================== onChange ของแต่ละ select ==================== */\n  const handleProvince = e => {\n    const code = e.target.value || '';\n    const sel = provinces.find(p => String(p.code) === String(code)) || null;\n\n    // เปลี่ยนจังหวัด → รีเซ็ตอำเภอ/ตำบล/ไปรษณีย์ และใส่ทั้งชื่อ+code\n    patch({\n      province: (sel === null || sel === void 0 ? void 0 : sel.name_th) || '',\n      province_code: (sel === null || sel === void 0 ? void 0 : sel.code) || null,\n      district: '',\n      district_code: null,\n      subdistrict: '',\n      subdistrict_code: null,\n      postal_code: ''\n    });\n  };\n  const handleDistrict = e => {\n    const code = e.target.value || '';\n    const sel = districts.find(d => String(d.code) === String(code)) || null;\n\n    // เปลี่ยนอำเภอ → รีเซ็ตตำบล/ไปรษณีย์ และใส่ทั้งชื่อ+code\n    patch({\n      district: (sel === null || sel === void 0 ? void 0 : sel.name_th) || '',\n      district_code: (sel === null || sel === void 0 ? void 0 : sel.code) || null,\n      subdistrict: '',\n      subdistrict_code: null,\n      postal_code: ''\n    });\n  };\n  const handleSubdistrict = e => {\n    const code = e.target.value || '';\n    const sel = subdistricts.find(s => String(s.code) === String(code)) || null;\n\n    // เลือกตำบล → ใส่ทั้งชื่อ+code และเติม ZIP\n    patch({\n      subdistrict: (sel === null || sel === void 0 ? void 0 : sel.name_th) || '',\n      subdistrict_code: (sel === null || sel === void 0 ? void 0 : sel.code) || null,\n      postal_code: sel !== null && sel !== void 0 && sel.zip_code ? String(sel.zip_code) : ''\n    });\n  };\n\n  /* ==================== disabled ของแต่ละชั้น ==================== */\n  const disProv = disabled || loadingProv;\n  const disDist = disabled || !currentProvinceCode || loadingDist;\n  const disSub = disabled || !currentDistrictCode || loadingSub;\n\n  /* ==================== UI ==================== */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gap: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr',\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: currentProvinceCode,\n        onChange: handleProvince,\n        disabled: disProv,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: loadingProv ? 'กำลังโหลดจังหวัด...' : '-- เลือกจังหวัด --'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), provinces.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: p.code,\n          children: p.name_th\n        }, p.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: currentDistrictCode,\n        onChange: handleDistrict,\n        disabled: disDist,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: loadingDist ? 'กำลังโหลดอำเภอ...' : currentProvinceCode ? '-- เลือกอำเภอ --' : 'เลือกจังหวัดก่อน'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), districts.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: d.code,\n          children: d.name_th\n        }, d.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value:\n        // ถ้า value เดิมไม่มี subdistrict_code ให้ map ชื่อ → code\n        value !== null && value !== void 0 && value.subdistrict_code ? String(value.subdistrict_code) : ((_subdistricts$find = subdistricts.find(t => t.name_th === (value === null || value === void 0 ? void 0 : value.subdistrict))) === null || _subdistricts$find === void 0 ? void 0 : _subdistricts$find.code) || '',\n        onChange: handleSubdistrict,\n        disabled: disSub,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: loadingSub ? 'กำลังโหลดตำบล...' : currentDistrictCode ? '-- เลือกตำบล --' : 'เลือกอำเภอก่อน'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), subdistricts.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: s.code,\n          children: s.name_th\n        }, s.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E44\\u0E1B\\u0E23\\u0E29\\u0E13\\u0E35\\u0E22\\u0E4C\",\n      value: (value === null || value === void 0 ? void 0 : value.postal_code) || '',\n      onChange: e => patch({\n        postal_code: e.target.value\n      }),\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(ThaiAddressPicker, \"APK1Bw0DiZZzaxPc5y0Q6/H41HQ=\");\n_c = ThaiAddressPicker;\nvar _c;\n$RefreshReg$(_c, \"ThaiAddressPicker\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useMemo","jsxDEV","_jsxDEV","ThaiAddressPicker","value","onChange","basePath","disabled","_s","_subdistricts$find","provinces","setProvinces","districts","setDistricts","subdistricts","setSubdists","loadingProv","setLoadingProv","loadingDist","setLoadingDist","loadingSub","setLoadingSub","cacheRef","patch","obj","alive","res","fetch","cache","data","json","Array","isArray","e","console","error","currentProvinceCode","province_code","String","p","find","x","name_th","province","code","currentDistrictCode","district_code","d","district","provCode","current","distCode","handleProvince","target","sel","subdistrict","subdistrict_code","postal_code","handleDistrict","handleSubdistrict","s","zip_code","disProv","disDist","disSub","style","display","gap","children","gridTemplateColumns","fileName","_jsxFileName","lineNumber","columnNumber","map","t","placeholder","_c","$RefreshReg$"],"sources":["D:/project19/frontend/src/components/ThaiAddressPicker.js"],"sourcesContent":["// src/components/ThaiAddressPicker.js\r\n// หน้าที่: ให้ผู้ใช้เลือก จังหวัด → อำเภอ → ตำบล (โหลดทีละชั้นจาก public/data/*)\r\n// จุดสำคัญ:\r\n//  - กรอง \"อำเภอ\" ด้วย province_code และ \"ตำบล\" ด้วย district_code เสมอ\r\n//  - onChange() จะคืนทั้ง \"ชื่อ\" และ \"code\" ของแต่ละระดับ + เติมรหัสไปรษณีย์ให้\r\n//  - รองรับเคสที่ value เดิมมีแค่ \"ชื่อ\" (ไม่มี code) โดย map ชื่อ → code ให้เอง\r\n\r\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\r\n\r\nexport default function ThaiAddressPicker({\r\n  value,               // ฟอร์มหลัก { province, district, subdistrict, postal_code, (อาจยังไม่มี *_code) }\r\n  onChange,            // ฟังก์ชันรับ patch แล้วรวมเข้าฟอร์มหลัก\r\n  basePath = '/data',  // ตำแหน่งไฟล์ JSON ใน /public (ต้องมี /data/provinces.json, /data/districts/{prov}.json, /data/subdistricts/{dist}.json)\r\n  disabled = false,\r\n}) {\r\n  /* ==================== สเตตของรายการแต่ละชั้น ==================== */\r\n  const [provinces, setProvinces]   = useState([]);\r\n  const [districts, setDistricts]   = useState([]);\r\n  const [subdistricts, setSubdists] = useState([]);\r\n\r\n  /* ==================== สถานะโหลดของแต่ละชั้น ==================== */\r\n  const [loadingProv, setLoadingProv] = useState(true);\r\n  const [loadingDist, setLoadingDist] = useState(false);\r\n  const [loadingSub,  setLoadingSub ] = useState(false);\r\n\r\n  /* ==================== แคชกันโหลดซ้ำ ==================== */\r\n  const cacheRef = useRef({ districts: {}, subdistricts: {} });\r\n\r\n  /* ==================== helper ==================== */\r\n  const patch = (obj) => onChange && onChange(obj);\r\n\r\n  /* [LOAD-1] โหลด \"จังหวัด\" ตอน mount */\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      setLoadingProv(true);\r\n      try {\r\n        const res  = await fetch(`${basePath}/provinces.json`, { cache: 'force-cache' });\r\n        const data = await res.json();\r\n        if (!alive) return;\r\n        // คาดว่าแต่ละแถวมี { code: '10', name_th: 'กรุงเทพมหานคร' }\r\n        setProvinces(Array.isArray(data) ? data : []);\r\n      } catch (e) {\r\n        console.error('[ThaiAddressPicker] load provinces error:', e);\r\n        if (alive) setProvinces([]);\r\n      } finally {\r\n        if (alive) setLoadingProv(false);\r\n      }\r\n    })();\r\n    return () => { alive = false; };\r\n  }, [basePath]);\r\n\r\n  /* === map \"ชื่อ\" → \"code\" เมื่อ value เดิมไม่มี code === */\r\n  const currentProvinceCode = useMemo(() => {\r\n    if (value?.province_code) return String(value.province_code);\r\n    const p = provinces.find(x => x.name_th === value?.province);\r\n    return p ? String(p.code) : '';\r\n  }, [value?.province_code, value?.province, provinces]);\r\n\r\n  const currentDistrictCode = useMemo(() => {\r\n    if (value?.district_code) return String(value.district_code);\r\n    const d = districts.find(x => x.name_th === value?.district);\r\n    return d ? String(d.code) : '';\r\n  }, [value?.district_code, value?.district, districts]);\r\n\r\n  /* [LOAD-2] เมื่อ \"จังหวัด\" เปลี่ยน → โหลด \"อำเภอ\" ของจังหวัดนั้น */\r\n  useEffect(() => {\r\n    const provCode = currentProvinceCode;\r\n    if (!provCode) {\r\n      setDistricts([]);\r\n      setSubdists([]);\r\n      return;\r\n    }\r\n    if (cacheRef.current.districts[provCode]) {\r\n      setDistricts(cacheRef.current.districts[provCode]);\r\n      return;\r\n    }\r\n    let alive = true;\r\n    (async () => {\r\n      setLoadingDist(true);\r\n      try {\r\n        const res  = await fetch(`${basePath}/districts/${provCode}.json`, { cache: 'force-cache' });\r\n        const data = await res.json();\r\n        if (!alive) return;\r\n        // คาดว่าแต่ละแถวมี { code:'1001', name_th:'พระนคร' }\r\n        cacheRef.current.districts[provCode] = Array.isArray(data) ? data : [];\r\n        setDistricts(cacheRef.current.districts[provCode]);\r\n      } catch (e) {\r\n        console.error('[ThaiAddressPicker] load districts error:', e);\r\n        if (alive) setDistricts([]);\r\n      } finally {\r\n        if (alive) setLoadingDist(false);\r\n      }\r\n    })();\r\n    return () => { alive = false; };\r\n  }, [currentProvinceCode, basePath]);\r\n\r\n  /* [LOAD-3] เมื่อ \"อำเภอ\" เปลี่ยน → โหลด \"ตำบล\" ของอำเภอนั้น */\r\n  useEffect(() => {\r\n    const distCode = currentDistrictCode;\r\n    if (!distCode) {\r\n      setSubdists([]);\r\n      return;\r\n    }\r\n    if (cacheRef.current.subdistricts[distCode]) {\r\n      setSubdists(cacheRef.current.subdistricts[distCode]);\r\n      return;\r\n    }\r\n    let alive = true;\r\n    (async () => {\r\n      setLoadingSub(true);\r\n      try {\r\n        const res  = await fetch(`${basePath}/subdistricts/${distCode}.json`, { cache: 'force-cache' });\r\n        const data = await res.json();\r\n        if (!alive) return;\r\n        // คาดว่าแต่ละแถวมี { code:'100101', name_th:'พระบรมมหาราชวัง', zip_code:'10200' }\r\n        cacheRef.current.subdistricts[distCode] = Array.isArray(data) ? data : [];\r\n        setSubdists(cacheRef.current.subdistricts[distCode]);\r\n      } catch (e) {\r\n        console.error('[ThaiAddressPicker] load subdistricts error:', e);\r\n        if (alive) setSubdists([]);\r\n      } finally {\r\n        if (alive) setLoadingSub(false);\r\n      }\r\n    })();\r\n    return () => { alive = false; };\r\n  }, [currentDistrictCode, basePath]);\r\n\r\n  /* ==================== onChange ของแต่ละ select ==================== */\r\n  const handleProvince = (e) => {\r\n    const code = e.target.value || '';\r\n    const sel  = provinces.find(p => String(p.code) === String(code)) || null;\r\n\r\n    // เปลี่ยนจังหวัด → รีเซ็ตอำเภอ/ตำบล/ไปรษณีย์ และใส่ทั้งชื่อ+code\r\n    patch({\r\n      province:       sel?.name_th || '',\r\n      province_code:  sel?.code || null,\r\n      district:       '',\r\n      district_code:  null,\r\n      subdistrict:    '',\r\n      subdistrict_code: null,\r\n      postal_code:    '',\r\n    });\r\n  };\r\n\r\n  const handleDistrict = (e) => {\r\n    const code = e.target.value || '';\r\n    const sel  = districts.find(d => String(d.code) === String(code)) || null;\r\n\r\n    // เปลี่ยนอำเภอ → รีเซ็ตตำบล/ไปรษณีย์ และใส่ทั้งชื่อ+code\r\n    patch({\r\n      district:        sel?.name_th || '',\r\n      district_code:   sel?.code || null,\r\n      subdistrict:     '',\r\n      subdistrict_code: null,\r\n      postal_code:     '',\r\n    });\r\n  };\r\n\r\n  const handleSubdistrict = (e) => {\r\n    const code = e.target.value || '';\r\n    const sel  = subdistricts.find(s => String(s.code) === String(code)) || null;\r\n\r\n    // เลือกตำบล → ใส่ทั้งชื่อ+code และเติม ZIP\r\n    patch({\r\n      subdistrict:       sel?.name_th || '',\r\n      subdistrict_code:  sel?.code || null,\r\n      postal_code:       sel?.zip_code ? String(sel.zip_code) : '',\r\n    });\r\n  };\r\n\r\n  /* ==================== disabled ของแต่ละชั้น ==================== */\r\n  const disProv = disabled || loadingProv;\r\n  const disDist = disabled || !currentProvinceCode || loadingDist;\r\n  const disSub  = disabled || !currentDistrictCode || loadingSub;\r\n\r\n  /* ==================== UI ==================== */\r\n  return (\r\n    <div style={{ display: 'grid', gap: 8 }}>\r\n      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: 8 }}>\r\n        {/* จังหวัด: value ใช้ \"code\" เพื่อให้คุมลูกได้เสถียร [UI-1] */}\r\n        <select value={currentProvinceCode} onChange={handleProvince} disabled={disProv}>\r\n          <option value=\"\">{loadingProv ? 'กำลังโหลดจังหวัด...' : '-- เลือกจังหวัด --'}</option>\r\n          {provinces.map(p => (\r\n            <option key={p.code} value={p.code}>{p.name_th}</option>\r\n          ))}\r\n        </select>\r\n\r\n        {/* อำเภอ: กรองด้วย province_code [UI-2] */}\r\n        <select value={currentDistrictCode} onChange={handleDistrict} disabled={disDist}>\r\n          <option value=\"\">{loadingDist ? 'กำลังโหลดอำเภอ...' : (currentProvinceCode ? '-- เลือกอำเภอ --' : 'เลือกจังหวัดก่อน')}</option>\r\n          {districts.map(d => (\r\n            <option key={d.code} value={d.code}>{d.name_th}</option>\r\n          ))}\r\n        </select>\r\n\r\n        {/* ตำบล: กรองด้วย district_code [UI-3] */}\r\n        <select\r\n          value={\r\n            // ถ้า value เดิมไม่มี subdistrict_code ให้ map ชื่อ → code\r\n            value?.subdistrict_code\r\n              ? String(value.subdistrict_code)\r\n              : (subdistricts.find(t => t.name_th === value?.subdistrict)?.code || '')\r\n          }\r\n          onChange={handleSubdistrict}\r\n          disabled={disSub}\r\n        >\r\n          <option value=\"\">{loadingSub ? 'กำลังโหลดตำบล...' : (currentDistrictCode ? '-- เลือกตำบล --' : 'เลือกอำเภอก่อน')}</option>\r\n          {subdistricts.map(s => (\r\n            <option key={s.code} value={s.code}>{s.name_th}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* รหัสไปรษณีย์: เติมจากตำบล แต่อนุญาตพิมพ์ทับได้ [UI-4] */}\r\n      <input\r\n        placeholder=\"รหัสไปรษณีย์\"\r\n        value={value?.postal_code || ''}\r\n        onChange={e => patch({ postal_code: e.target.value })}\r\n        disabled={disabled}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}