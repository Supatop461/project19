{"ast":null,"code":"var _jsxFileName = \"D:\\\\project19\\\\frontend\\\\src\\\\index.js\";\n// src/index.js\nimport React from 'react'; // ใช้ JSX/คอมโพเนนต์ React\nimport ReactDOM from 'react-dom/client'; // API สร้าง root (React 18+)\nimport './index.css'; // สไตล์รวมของแอป\nimport App from './App'; // คอมโพเนนต์หลักของแอป\nimport reportWebVitals from './reportWebVitals'; // ตัวรายงาน performance (ไม่บังคับใช้)\nimport axios from 'axios'; // ไลบรารี HTTP client\n\n/* ============ Axios Global Config ============ */\n// ดึง BASE URL ของ API จาก .env (CRA ต้องขึ้นต้นด้วย REACT_APP_)\n// ถ้าไม่ตั้งค่าไว้ จะ fallback เป็น http://localhost:3001\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RAW_BASE = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001';\n\n// ปรับให้ชัวร์ว่า baseURL ไม่มี \"/\" ท้าย (กัน URL ซ้อนเป็น //... เวลา concat path)\naxios.defaults.baseURL = RAW_BASE.replace(/\\/+$/, '');\n\n// ตั้ง timeout 10 วินาที ป้องกัน req ค้างนานเกินไป (จะ throw error ให้จับใน .catch)\naxios.defaults.timeout = 10000;\n\n// ---------- Request Interceptor ----------\n// โดนเรียก \"ก่อน\" ส่งทุก request: แนบ Authorization: Bearer <token> อัตโนมัติ\n// (อ่าน token จาก localStorage ทุกครั้ง เพื่อให้ได้ค่าล่าสุดหลัง login/logout)\naxios.interceptors.request.use(cfg => {\n  const t = localStorage.getItem('token');\n  if (t) cfg.headers.Authorization = `Bearer ${t}`;\n  return cfg;\n});\n\n// ---------- Response Interceptor (ตัวเลือก) ----------\n// โดนเรียก \"หลัง\" ได้ response/เกิด error: ถ้าเซิร์ฟเวอร์ตอบ 401 → token อาจหมดอายุ/ไม่ถูกต้อง\n// เราลบ token ทิ้ง และ (ถ้าต้องการ) redirect ผู้ใช้ไปหน้า login\naxios.interceptors.response.use(r => r, err => {\n  var _err$response;\n  if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n    localStorage.removeItem('token');\n    // window.location.assign('/login'); // เปิดถ้าอยากพาไปล็อกอินใหม่อัตโนมัติ\n  }\n  return Promise.reject(err);\n});\n\n/* ============== React Mount ============== */\n// สร้าง root และ render แอป\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n/*#__PURE__*/\n// StrictMode จะช่วยเตือนโค้ดที่ไม่ปลอดภัย และในโหมด dev จะเรียก lifecycle บางอย่างซ้ำเพื่อจับบั๊ก\n_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 3\n}, this));\n\n// เรียกตัวรายงาน performance (ถ้าอยากส่งผลไปวิเคราะห์ สามารถใส่ฟังก์ชันเข้าไปได้)\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","axios","jsxDEV","_jsxDEV","RAW_BASE","process","env","REACT_APP_API_BASE_URL","defaults","baseURL","replace","timeout","interceptors","request","use","cfg","t","localStorage","getItem","headers","Authorization","response","r","err","_err$response","status","removeItem","Promise","reject","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/project19/frontend/src/index.js"],"sourcesContent":["// src/index.js\nimport React from 'react';                       // ใช้ JSX/คอมโพเนนต์ React\nimport ReactDOM from 'react-dom/client';         // API สร้าง root (React 18+)\nimport './index.css';                            // สไตล์รวมของแอป\nimport App from './App';                         // คอมโพเนนต์หลักของแอป\nimport reportWebVitals from './reportWebVitals'; // ตัวรายงาน performance (ไม่บังคับใช้)\nimport axios from 'axios';                       // ไลบรารี HTTP client\n\n/* ============ Axios Global Config ============ */\n// ดึง BASE URL ของ API จาก .env (CRA ต้องขึ้นต้นด้วย REACT_APP_)\n// ถ้าไม่ตั้งค่าไว้ จะ fallback เป็น http://localhost:3001\nconst RAW_BASE = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001';\n\n// ปรับให้ชัวร์ว่า baseURL ไม่มี \"/\" ท้าย (กัน URL ซ้อนเป็น //... เวลา concat path)\naxios.defaults.baseURL = RAW_BASE.replace(/\\/+$/, '');\n\n// ตั้ง timeout 10 วินาที ป้องกัน req ค้างนานเกินไป (จะ throw error ให้จับใน .catch)\naxios.defaults.timeout = 10000;\n\n// ---------- Request Interceptor ----------\n// โดนเรียก \"ก่อน\" ส่งทุก request: แนบ Authorization: Bearer <token> อัตโนมัติ\n// (อ่าน token จาก localStorage ทุกครั้ง เพื่อให้ได้ค่าล่าสุดหลัง login/logout)\naxios.interceptors.request.use(cfg => {\n  const t = localStorage.getItem('token');\n  if (t) cfg.headers.Authorization = `Bearer ${t}`;\n  return cfg;\n});\n\n// ---------- Response Interceptor (ตัวเลือก) ----------\n// โดนเรียก \"หลัง\" ได้ response/เกิด error: ถ้าเซิร์ฟเวอร์ตอบ 401 → token อาจหมดอายุ/ไม่ถูกต้อง\n// เราลบ token ทิ้ง และ (ถ้าต้องการ) redirect ผู้ใช้ไปหน้า login\naxios.interceptors.response.use(\n  r => r,\n  err => {\n    if (err?.response?.status === 401) {\n      localStorage.removeItem('token');\n      // window.location.assign('/login'); // เปิดถ้าอยากพาไปล็อกอินใหม่อัตโนมัติ\n    }\n    return Promise.reject(err);\n  }\n);\n\n/* ============== React Mount ============== */\n// สร้าง root และ render แอป\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // StrictMode จะช่วยเตือนโค้ดที่ไม่ปลอดภัย และในโหมด dev จะเรียก lifecycle บางอย่างซ้ำเพื่อจับบั๊ก\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// เรียกตัวรายงาน performance (ถ้าอยากส่งผลไปวิเคราะห์ สามารถใส่ฟังก์ชันเข้าไปได้)\nreportWebVitals();\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAuB;AACjD,OAAOC,QAAQ,MAAM,kBAAkB,CAAC,CAAS;AACjD,OAAO,aAAa,CAAC,CAA4B;AACjD,OAAOC,GAAG,MAAM,OAAO,CAAC,CAAyB;AACjD,OAAOC,eAAe,MAAM,mBAAmB,CAAC,CAAC;AACjD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAuB;;AAEjD;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;;AAE9E;AACAN,KAAK,CAACO,QAAQ,CAACC,OAAO,GAAGL,QAAQ,CAACM,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;;AAErD;AACAT,KAAK,CAACO,QAAQ,CAACG,OAAO,GAAG,KAAK;;AAE9B;AACA;AACA;AACAV,KAAK,CAACW,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAI;EACpC,MAAMC,CAAC,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACvC,IAAIF,CAAC,EAAED,GAAG,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,CAAC,EAAE;EAChD,OAAOD,GAAG;AACZ,CAAC,CAAC;;AAEF;AACA;AACA;AACAd,KAAK,CAACW,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC7BQ,CAAC,IAAIA,CAAC,EACNC,GAAG,IAAI;EAAA,IAAAC,aAAA;EACL,IAAI,CAAAD,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEF,QAAQ,cAAAG,aAAA,uBAAbA,aAAA,CAAeC,MAAM,MAAK,GAAG,EAAE;IACjCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChC;EACF;EACA,OAAOC,OAAO,CAACC,MAAM,CAACL,GAAG,CAAC;AAC5B,CACF,CAAC;;AAED;AACA;AACA,MAAMM,IAAI,GAAG/B,QAAQ,CAACgC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM;AAAA;AACT;AACA9B,OAAA,CAACN,KAAK,CAACqC,UAAU;EAAAC,QAAA,eACfhC,OAAA,CAACJ,GAAG;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACAvC,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}