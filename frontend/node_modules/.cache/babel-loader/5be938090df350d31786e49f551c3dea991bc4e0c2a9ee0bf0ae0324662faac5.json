{"ast":null,"code":"// backend/routes/me.js\nconst express = require('express');\nconst router = express.Router();\n\n/* ---------- DB import ---------- */\nlet pool;\ntry {\n  pool = require('../db');\n} catch {\n  pool = require('../db/db');\n}\n\n/* ---------- Auth middleware ---------- */\nlet requireAuth;\ntry {\n  ({\n    requireAuth\n  } = require('../middleware/auth'));\n} catch {\n  ({\n    requireAuth\n  } = require('../middleware/authMiddleware'));\n}\n\n/* ---------- helpers ---------- */\nfunction joinName(first, last) {\n  return [first, last].filter(Boolean).join(' ').trim();\n}\nfunction splitFullname(fullname) {\n  if (!fullname) return {\n    first: null,\n    last: null\n  };\n  const parts = String(fullname).trim().split(/\\s+/);\n  const first = parts.shift() || null;\n  const last = parts.length ? parts.join(' ') : null;\n  return {\n    first,\n    last\n  };\n}\n\n/** ดึง user id จาก token/middleware ให้ครอบคลุมหลายรูปแบบ */\nfunction getUserId(req) {\n  var _ref, _ref2, _ref3, _ref4, _ref5, _ref6, _req$user$id, _req$user, _req$user2, _req$user3, _req$user4, _req$auth, _req$auth2;\n  return (_ref = (_ref2 = (_ref3 = (_ref4 = (_ref5 = (_ref6 = (_req$user$id = (_req$user = req.user) === null || _req$user === void 0 ? void 0 : _req$user.id) !== null && _req$user$id !== void 0 ? _req$user$id : (_req$user2 = req.user) === null || _req$user2 === void 0 ? void 0 : _req$user2.user_id) !== null && _ref6 !== void 0 ? _ref6 : (_req$user3 = req.user) === null || _req$user3 === void 0 ? void 0 : _req$user3.uid) !== null && _ref5 !== void 0 ? _ref5 : (_req$user4 = req.user) === null || _req$user4 === void 0 ? void 0 : _req$user4.sub) !== null && _ref4 !== void 0 ? _ref4 : req.userId) !== null && _ref3 !== void 0 ? _ref3 : // บาง middleware ใส่แยก\n  (_req$auth = req.auth) === null || _req$auth === void 0 ? void 0 : _req$auth.id) !== null && _ref2 !== void 0 ? _ref2 : // บางตัวเก็บใน req.auth\n  (_req$auth2 = req.auth) === null || _req$auth2 === void 0 ? void 0 : _req$auth2.user_id) !== null && _ref !== void 0 ? _ref : null;\n}\n\n/* ---------- health check ---------- */\nrouter.get('/me/ping', (_req, res) => res.json({\n  ok: true,\n  where: 'routes/me.js'\n}));\n\n/* ========== GET /api/me ========== */\nrouter.get('/me', requireAuth, async (req, res) => {\n  try {\n    const userId = getUserId(req);\n    if (!userId) return res.status(401).json({\n      message: 'invalid token: no user id'\n    });\n    const sql = `\n      SELECT user_id, username, email, first_name, last_name, phone_number, role_id\n      FROM users\n      WHERE user_id = $1\n    `;\n    const {\n      rows\n    } = await pool.query(sql, [userId]);\n    if (!rows.length) return res.status(404).json({\n      message: 'not found'\n    });\n    const u = rows[0];\n    const fullname = joinName(u.first_name, u.last_name) || u.username || '';\n    return res.json({\n      id: u.user_id,\n      email: u.email || '',\n      fullname,\n      phone: u.phone_number || '',\n      avatar_url: '',\n      role: u.role_id || 'customer'\n    });\n  } catch (err) {\n    console.error('GET /api/me error:', err);\n    return res.status(500).json({\n      message: 'internal error'\n    });\n  }\n});\n\n/* ========== PUT /api/me ========== */\nrouter.put('/me', requireAuth, async (req, res) => {\n  try {\n    const userId = getUserId(req);\n    if (!userId) return res.status(401).json({\n      message: 'invalid token: no user id'\n    });\n    const {\n      fullname = null,\n      phone = null\n    } = req.body;\n    const {\n      first,\n      last\n    } = splitFullname(fullname);\n    const sql = `\n      UPDATE users\n      SET\n        first_name   = COALESCE($2, first_name),\n        last_name    = COALESCE($3, last_name),\n        phone_number = COALESCE($4, phone_number)\n      WHERE user_id = $1\n      RETURNING user_id, email, first_name, last_name, phone_number, role_id\n    `;\n    const {\n      rows\n    } = await pool.query(sql, [userId, first, last, phone]);\n    if (!rows.length) return res.status(404).json({\n      message: 'not found'\n    });\n    const u = rows[0];\n    return res.json({\n      id: u.user_id,\n      email: u.email || '',\n      fullname: joinName(u.first_name, u.last_name),\n      phone: u.phone_number || '',\n      avatar_url: '',\n      role: u.role_id || 'customer'\n    });\n  } catch (err) {\n    console.error('PUT /api/me error:', err);\n    return res.status(500).json({\n      message: 'internal error'\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","pool","requireAuth","joinName","first","last","filter","Boolean","join","trim","splitFullname","fullname","parts","String","split","shift","length","getUserId","req","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_req$user$id","_req$user","_req$user2","_req$user3","_req$user4","_req$auth","_req$auth2","user","id","user_id","uid","sub","userId","auth","get","_req","res","json","ok","where","status","message","sql","rows","query","u","first_name","last_name","username","email","phone","phone_number","avatar_url","role","role_id","err","console","error","put","body","module","exports"],"sources":["D:/project19/frontend/src/pages/Login.js"],"sourcesContent":["// backend/routes/me.js\r\nconst express = require('express');\r\nconst router = express.Router();\r\n\r\n/* ---------- DB import ---------- */\r\nlet pool;\r\ntry { pool = require('../db'); }\r\ncatch { pool = require('../db/db'); }\r\n\r\n/* ---------- Auth middleware ---------- */\r\nlet requireAuth;\r\ntry { ({ requireAuth } = require('../middleware/auth')); }\r\ncatch { ({ requireAuth } = require('../middleware/authMiddleware')); }\r\n\r\n/* ---------- helpers ---------- */\r\nfunction joinName(first, last) {\r\n  return [first, last].filter(Boolean).join(' ').trim();\r\n}\r\nfunction splitFullname(fullname) {\r\n  if (!fullname) return { first: null, last: null };\r\n  const parts = String(fullname).trim().split(/\\s+/);\r\n  const first = parts.shift() || null;\r\n  const last = parts.length ? parts.join(' ') : null;\r\n  return { first, last };\r\n}\r\n\r\n/** ดึง user id จาก token/middleware ให้ครอบคลุมหลายรูปแบบ */\r\nfunction getUserId(req) {\r\n  return (\r\n    req.user?.id ??\r\n    req.user?.user_id ??\r\n    req.user?.uid ??\r\n    req.user?.sub ??\r\n    req.userId ??               // บาง middleware ใส่แยก\r\n    req.auth?.id ??             // บางตัวเก็บใน req.auth\r\n    req.auth?.user_id ?? null\r\n  );\r\n}\r\n\r\n/* ---------- health check ---------- */\r\nrouter.get('/me/ping', (_req, res) => res.json({ ok: true, where: 'routes/me.js' }));\r\n\r\n/* ========== GET /api/me ========== */\r\nrouter.get('/me', requireAuth, async (req, res) => {\r\n  try {\r\n    const userId = getUserId(req);\r\n    if (!userId) return res.status(401).json({ message: 'invalid token: no user id' });\r\n\r\n    const sql = `\r\n      SELECT user_id, username, email, first_name, last_name, phone_number, role_id\r\n      FROM users\r\n      WHERE user_id = $1\r\n    `;\r\n    const { rows } = await pool.query(sql, [userId]);\r\n    if (!rows.length) return res.status(404).json({ message: 'not found' });\r\n\r\n    const u = rows[0];\r\n    const fullname = joinName(u.first_name, u.last_name) || u.username || '';\r\n\r\n    return res.json({\r\n      id: u.user_id,\r\n      email: u.email || '',\r\n      fullname,\r\n      phone: u.phone_number || '',\r\n      avatar_url: '',\r\n      role: u.role_id || 'customer',\r\n    });\r\n  } catch (err) {\r\n    console.error('GET /api/me error:', err);\r\n    return res.status(500).json({ message: 'internal error' });\r\n  }\r\n});\r\n\r\n/* ========== PUT /api/me ========== */\r\nrouter.put('/me', requireAuth, async (req, res) => {\r\n  try {\r\n    const userId = getUserId(req);\r\n    if (!userId) return res.status(401).json({ message: 'invalid token: no user id' });\r\n\r\n    const { fullname = null, phone = null } = req.body;\r\n    const { first, last } = splitFullname(fullname);\r\n\r\n    const sql = `\r\n      UPDATE users\r\n      SET\r\n        first_name   = COALESCE($2, first_name),\r\n        last_name    = COALESCE($3, last_name),\r\n        phone_number = COALESCE($4, phone_number)\r\n      WHERE user_id = $1\r\n      RETURNING user_id, email, first_name, last_name, phone_number, role_id\r\n    `;\r\n    const { rows } = await pool.query(sql, [userId, first, last, phone]);\r\n    if (!rows.length) return res.status(404).json({ message: 'not found' });\r\n\r\n    const u = rows[0];\r\n    return res.json({\r\n      id: u.user_id,\r\n      email: u.email || '',\r\n      fullname: joinName(u.first_name, u.last_name),\r\n      phone: u.phone_number || '',\r\n      avatar_url: '',\r\n      role: u.role_id || 'customer',\r\n    });\r\n  } catch (err) {\r\n    console.error('PUT /api/me error:', err);\r\n    return res.status(500).json({ message: 'internal error' });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}