{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst db = require('../db'); // ปรับ path ตามโปรเจกต์\nconst {\n  requireAuth\n} = require('../middleware/auth');\n\n// ตารางอ้างอิง (ใช้อะไรจริงให้เท่านั้น)\nconst TABLE = 'addresses';\n/*\r\ncolumns ที่ใช้:\r\n- address_id (pk, serial/bigserial)\r\n- user_id (fk -> users)\r\n- label, recipient_name, phone, line1, line2\r\n- province, province_code, district, district_code, subdistrict, subdistrict_code\r\n- postal_code, country, is_default (boolean)\r\n- created_at, updated_at (ถ้ามี)\r\n*/\n\nrouter.use(requireAuth);\n\n// GET /api/addresses/me\nrouter.get('/me', async (req, res) => {\n  const {\n    user_id\n  } = req.user;\n  const {\n    rows\n  } = await db.query(`SELECT * FROM ${TABLE} WHERE user_id=$1 ORDER BY is_default DESC, address_id DESC`, [user_id]);\n  // หน้า Addresses รองรับทั้ง {items:[]} หรือ [] — ส่งแบบตรง ๆ ก็ได้\n  res.json({\n    items: rows\n  });\n});\n\n// POST /api/addresses\nrouter.post('/', async (req, res) => {\n  const {\n    user_id\n  } = req.user;\n  const a = req.body || {};\n\n  // ถ้าตั้ง default ให้ clear ของเก่าก่อน\n  if (a.is_default) {\n    await db.query(`UPDATE ${TABLE} SET is_default=FALSE WHERE user_id=$1`, [user_id]);\n  }\n  const {\n    rows\n  } = await db.query(`INSERT INTO ${TABLE}\n     (user_id, label, recipient_name, phone, line1, line2,\n      province, province_code, district, district_code, subdistrict, subdistrict_code,\n      postal_code, country, is_default)\n     VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,COALESCE($15,false))\n     RETURNING *`, [user_id, a.label || '', a.recipient_name || '', a.phone || '', a.line1 || '', a.line2 || '', a.province || '', a.province_code || null, a.district || '', a.district_code || null, a.subdistrict || '', a.subdistrict_code || null, a.postal_code || '', a.country || 'TH', !!a.is_default]);\n  res.json(rows[0]);\n});\n\n// PUT /api/addresses/:id\nrouter.put('/:id', async (req, res) => {\n  const {\n    user_id\n  } = req.user;\n  const id = Number(req.params.id);\n  const a = req.body || {};\n  if (a.is_default) {\n    await db.query(`UPDATE ${TABLE} SET is_default=FALSE WHERE user_id=$1`, [user_id]);\n  }\n  const {\n    rows\n  } = await db.query(`UPDATE ${TABLE}\n     SET label=$1, recipient_name=$2, phone=$3, line1=$4, line2=$5,\n         province=$6, province_code=$7, district=$8, district_code=$9,\n         subdistrict=$10, subdistrict_code=$11, postal_code=$12, country=$13,\n         is_default=COALESCE($14,is_default)\n     WHERE address_id=$15 AND user_id=$16\n     RETURNING *`, [a.label || '', a.recipient_name || '', a.phone || '', a.line1 || '', a.line2 || '', a.province || '', a.province_code || null, a.district || '', a.district_code || null, a.subdistrict || '', a.subdistrict_code || null, a.postal_code || '', a.country || 'TH', a.is_default === undefined ? null : !!a.is_default, id, user_id]);\n  if (!rows.length) return res.status(404).json({\n    ok: false,\n    error: 'Not found'\n  });\n  res.json(rows[0]);\n});\n\n// DELETE /api/addresses/:id\nrouter.delete('/:id', async (req, res) => {\n  const {\n    user_id\n  } = req.user;\n  const id = Number(req.params.id);\n  const r = await db.query(`DELETE FROM ${TABLE} WHERE address_id=$1 AND user_id=$2`, [id, user_id]);\n  res.json({\n    ok: true,\n    deleted: r.rowCount\n  });\n});\n\n// PATCH /api/addresses/:id/default\nrouter.patch('/:id/default', async (req, res) => {\n  const {\n    user_id\n  } = req.user;\n  const id = Number(req.params.id);\n  await db.query(`UPDATE ${TABLE} SET is_default=FALSE WHERE user_id=$1`, [user_id]);\n  const {\n    rows\n  } = await db.query(`UPDATE ${TABLE} SET is_default=TRUE WHERE address_id=$1 AND user_id=$2 RETURNING *`, [id, user_id]);\n  if (!rows.length) return res.status(404).json({\n    ok: false,\n    error: 'Not found'\n  });\n  res.json(rows[0]);\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","db","requireAuth","TABLE","use","get","req","res","user_id","user","rows","query","json","items","post","a","body","is_default","label","recipient_name","phone","line1","line2","province","province_code","district","district_code","subdistrict","subdistrict_code","postal_code","country","put","id","Number","params","undefined","length","status","ok","error","delete","r","deleted","rowCount","patch","module","exports"],"sources":["D:/project19/frontend/src/account/Addresses.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../db'); // ปรับ path ตามโปรเจกต์\r\nconst { requireAuth } = require('../middleware/auth');\r\n\r\n// ตารางอ้างอิง (ใช้อะไรจริงให้เท่านั้น)\r\nconst TABLE = 'addresses';\r\n/*\r\ncolumns ที่ใช้:\r\n- address_id (pk, serial/bigserial)\r\n- user_id (fk -> users)\r\n- label, recipient_name, phone, line1, line2\r\n- province, province_code, district, district_code, subdistrict, subdistrict_code\r\n- postal_code, country, is_default (boolean)\r\n- created_at, updated_at (ถ้ามี)\r\n*/\r\n\r\nrouter.use(requireAuth);\r\n\r\n// GET /api/addresses/me\r\nrouter.get('/me', async (req, res) => {\r\n  const { user_id } = req.user;\r\n  const { rows } = await db.query(\r\n    `SELECT * FROM ${TABLE} WHERE user_id=$1 ORDER BY is_default DESC, address_id DESC`,\r\n    [user_id]\r\n  );\r\n  // หน้า Addresses รองรับทั้ง {items:[]} หรือ [] — ส่งแบบตรง ๆ ก็ได้\r\n  res.json({ items: rows });\r\n});\r\n\r\n// POST /api/addresses\r\nrouter.post('/', async (req, res) => {\r\n  const { user_id } = req.user;\r\n  const a = req.body || {};\r\n\r\n  // ถ้าตั้ง default ให้ clear ของเก่าก่อน\r\n  if (a.is_default) {\r\n    await db.query(`UPDATE ${TABLE} SET is_default=FALSE WHERE user_id=$1`, [user_id]);\r\n  }\r\n\r\n  const { rows } = await db.query(\r\n    `INSERT INTO ${TABLE}\r\n     (user_id, label, recipient_name, phone, line1, line2,\r\n      province, province_code, district, district_code, subdistrict, subdistrict_code,\r\n      postal_code, country, is_default)\r\n     VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,COALESCE($15,false))\r\n     RETURNING *`,\r\n    [\r\n      user_id, a.label||'', a.recipient_name||'', a.phone||'',\r\n      a.line1||'', a.line2||'',\r\n      a.province||'', a.province_code||null, a.district||'', a.district_code||null,\r\n      a.subdistrict||'', a.subdistrict_code||null,\r\n      a.postal_code||'', a.country||'TH', !!a.is_default\r\n    ]\r\n  );\r\n  res.json(rows[0]);\r\n});\r\n\r\n// PUT /api/addresses/:id\r\nrouter.put('/:id', async (req, res) => {\r\n  const { user_id } = req.user;\r\n  const id = Number(req.params.id);\r\n  const a = req.body || {};\r\n\r\n  if (a.is_default) {\r\n    await db.query(`UPDATE ${TABLE} SET is_default=FALSE WHERE user_id=$1`, [user_id]);\r\n  }\r\n\r\n  const { rows } = await db.query(\r\n    `UPDATE ${TABLE}\r\n     SET label=$1, recipient_name=$2, phone=$3, line1=$4, line2=$5,\r\n         province=$6, province_code=$7, district=$8, district_code=$9,\r\n         subdistrict=$10, subdistrict_code=$11, postal_code=$12, country=$13,\r\n         is_default=COALESCE($14,is_default)\r\n     WHERE address_id=$15 AND user_id=$16\r\n     RETURNING *`,\r\n    [\r\n      a.label||'', a.recipient_name||'', a.phone||'',\r\n      a.line1||'', a.line2||'',\r\n      a.province||'', a.province_code||null, a.district||'', a.district_code||null,\r\n      a.subdistrict||'', a.subdistrict_code||null, a.postal_code||'',\r\n      a.country||'TH', (a.is_default===undefined? null : !!a.is_default),\r\n      id, user_id\r\n    ]\r\n  );\r\n  if (!rows.length) return res.status(404).json({ ok:false, error:'Not found' });\r\n  res.json(rows[0]);\r\n});\r\n\r\n// DELETE /api/addresses/:id\r\nrouter.delete('/:id', async (req, res) => {\r\n  const { user_id } = req.user;\r\n  const id = Number(req.params.id);\r\n  const r = await db.query(`DELETE FROM ${TABLE} WHERE address_id=$1 AND user_id=$2`, [id, user_id]);\r\n  res.json({ ok: true, deleted: r.rowCount });\r\n});\r\n\r\n// PATCH /api/addresses/:id/default\r\nrouter.patch('/:id/default', async (req, res) => {\r\n  const { user_id } = req.user;\r\n  const id = Number(req.params.id);\r\n  await db.query(`UPDATE ${TABLE} SET is_default=FALSE WHERE user_id=$1`, [user_id]);\r\n  const { rows } = await db.query(\r\n    `UPDATE ${TABLE} SET is_default=TRUE WHERE address_id=$1 AND user_id=$2 RETURNING *`,\r\n    [id, user_id]\r\n  );\r\n  if (!rows.length) return res.status(404).json({ ok:false, error:'Not found' });\r\n  res.json(rows[0]);\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}