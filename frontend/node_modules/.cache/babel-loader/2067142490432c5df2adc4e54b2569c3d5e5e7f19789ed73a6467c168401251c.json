{"ast":null,"code":"// backend/routes/variants.js\n// ------------------------------------------------------------\n// เติม \"compat routes\" สำหรับ endpoint เก่า/สำรองที่ฝั่ง frontend เรียกแล้ว 404\n// - GET /api/products/:id/variant-values\n// - GET /api/admin/products/:id/variant-values\n// - GET /api/product_variant_values?product_id=ID\n// - GET /api/products/:id/option-values\n// - GET /api/admin/products/:id/option-values\n// - GET /api/product_option_values?product_id=ID\n// ให้ชี้ไปยัง logic เดิมที่คุณใช้อยู่ (/api/variants/product/:id และ /api/variants/products/:id/options)\n// ------------------------------------------------------------\n\nconst express = require('express');\nconst router = module.exports = require('./_ensureRouter')(module, express);\n\n// ---- db loader (support ../db and ../db/db) ----\nlet db;\ntry {\n  db = require('../db');\n} catch {\n  db = require('../db/db');\n}\n\n// ---- auth middleware (fallback no-op if missing) ----\nconst {\n  requireAuth,\n  requireRole\n} = (() => {\n  try {\n    return require('../middleware/auth');\n  } catch {\n    return {\n      requireAuth: (_req, _res, next) => next(),\n      requireRole: _role => (_req, _res, next) => next()\n    };\n  }\n})();\n\n/* ----------------------------------------\r\n   helpers: ตรวจสอบ view/column แบบเดียวกับของเดิม\r\n----------------------------------------- */\nasync function viewExists(name) {\n  const sql = `SELECT 1 FROM information_schema.views WHERE table_schema='public' AND table_name=$1 LIMIT 1`;\n  const {\n    rows\n  } = await db.query(sql, [name]);\n  return rows.length > 0;\n}\nasync function hasColumn(table, col) {\n  const sql = `\n    SELECT 1\n    FROM information_schema.columns\n    WHERE table_schema='public' AND table_name=$1 AND column_name=$2\n    LIMIT 1\n  `;\n  const {\n    rows\n  } = await db.query(sql, [table, col]);\n  return rows.length > 0;\n}\n\n/* ----------------------------------------\r\n   core loaders ที่ใช้ซ้ำ\r\n----------------------------------------- */\n\n// โหลด \"variant-values\" เหมือน /api/variants/product/:id\nasync function loadVariantValues(productId) {\n  const hasLive = await viewExists('v_product_variants_live_stock');\n  if (hasLive) {\n    // ใช้ view สด\n    const sql = `\n      SELECT\n        lv.variant_id,\n        lv.product_id,\n        lv.sku,\n        COALESCE(lv.price_override, p.price) AS price,\n        lv.stock::int                        AS stock,\n        COALESCE(lv.is_active, TRUE)         AS is_active,\n        lv.image_url,\n        COALESCE(\n          json_agg(\n            json_build_object('option_id', pvv.option_id, 'value_id', pvv.value_id)\n            ORDER BY pvv.option_id\n          ) FILTER (WHERE pvv.option_id IS NOT NULL),\n          '[]'\n        ) AS combo\n      FROM v_product_variants_live_stock lv\n      JOIN products p ON p.product_id = lv.product_id\n      LEFT JOIN product_variant_values pvv ON pvv.variant_id = lv.variant_id\n      WHERE lv.product_id = $1\n        AND COALESCE(lv.is_active, TRUE) = TRUE\n      GROUP BY lv.variant_id, lv.product_id, lv.sku, lv.price_override, lv.stock, lv.is_active, lv.image_url, p.price\n      ORDER BY lv.variant_id ASC\n    `;\n    const {\n      rows\n    } = await db.query(sql, [productId]);\n    return rows;\n  }\n\n  // fallback: ไม่มี view → join จากตาราง\n  // หมายเหตุ: ปรับชื่อคอลัมน์ให้เข้ากับสคีมาของคุณ ถ้าใช้ชื่ออื่น\n  const hasPV = await hasColumn('product_variants', 'product_id');\n  const sql = `\n    SELECT\n      v.variant_id,\n      v.product_id,\n      v.sku,\n      COALESCE(v.price_override, p.price) AS price,\n      COALESCE(v.stock, 0)::int           AS stock,\n      COALESCE(v.is_active, TRUE)         AS is_active,\n      v.image_url,\n      COALESCE(\n        json_agg(\n          json_build_object('option_id', pvv.option_id, 'value_id', pvv.value_id)\n          ORDER BY pvv.option_id\n        ) FILTER (WHERE pvv.option_id IS NOT NULL),\n        '[]'\n      ) AS combo\n    FROM product_variants v\n    JOIN products p ON p.product_id = v.product_id\n    LEFT JOIN product_variant_values pvv ON pvv.variant_id = v.variant_id\n    WHERE v.${hasPV ? 'product_id' : 'product_id'} = $1\n    GROUP BY v.variant_id, v.product_id, v.sku, v.price_override, v.stock, v.is_active, v.image_url, p.price\n    ORDER BY v.variant_id ASC\n  `;\n  const {\n    rows\n  } = await db.query(sql, [productId]);\n  return rows;\n}\n\n// โหลด \"option-values\" เหมือน /api/variants/products/:id/options\nasync function loadOptionValues(productId) {\n  const hasOptPos = await hasColumn('product_options', 'option_position');\n  const hasValPos = await hasColumn('product_option_values', 'value_position');\n  const orderOpt = hasOptPos ? 'COALESCE(o.option_position, 0), o.option_id' : 'o.option_id';\n  const orderVal = hasValPos ? 'COALESCE(v.value_position, 0), v.value_id' : 'v.value_id';\n  const sql = `\n    SELECT\n      o.option_id,\n      o.option_name,\n      ${hasOptPos ? 'o.option_position' : 'NULL::int'} AS option_position,\n      COALESCE(\n        JSON_AGG(\n          JSON_BUILD_OBJECT(\n            'value_id', v.value_id,\n            'value_name', v.value_name,\n            ${hasValPos ? `'value_position', v.value_position,` : ``}\n            'option_id', v.option_id\n          )\n          ORDER BY ${orderVal}\n        ) FILTER (WHERE v.value_id IS NOT NULL),\n        '[]'\n      ) AS values\n    FROM product_options o\n    LEFT JOIN product_option_values v ON v.option_id = o.option_id\n    WHERE o.product_id = $1\n    GROUP BY o.option_id, o.option_name ${hasOptPos ? ', o.option_position' : ''}\n    ORDER BY ${orderOpt} ASC\n  `;\n  const {\n    rows\n  } = await db.query(sql, [productId]);\n  return rows;\n}\n\n/* ----------------------------------------\r\n   COMPAT ENDPOINTS (alias)\r\n----------------------------------------- */\n\n// 1) variant-values (แบบ path)\nrouter.get('/products/:id/variant-values', requireAuth, requireRole('admin'), async (req, res) => {\n  try {\n    const id = parseInt(req.params.id, 10);\n    const rows = await loadVariantValues(id);\n    res.json(rows);\n  } catch (e) {\n    console.error('variant-values(path) error:', e);\n    res.status(500).json({\n      error: 'variant-values failed'\n    });\n  }\n});\nrouter.get('/admin/products/:id/variant-values', requireAuth, requireRole('admin'), async (req, res) => {\n  try {\n    const id = parseInt(req.params.id, 10);\n    const rows = await loadVariantValues(id);\n    res.json(rows);\n  } catch (e) {\n    console.error('admin variant-values(path) error:', e);\n    res.status(500).json({\n      error: 'variant-values failed'\n    });\n  }\n});\n// 1.1) variant-values (แบบ query ?product_id=)\nrouter.get('/product_variant_values', requireAuth, requireRole('admin'), async (req, res) => {\n  try {\n    const id = parseInt(String(req.query.product_id || ''), 10);\n    if (!Number.isFinite(id)) return res.status(400).json({\n      error: 'product_id is required'\n    });\n    const rows = await loadVariantValues(id);\n    res.json(rows);\n  } catch (e) {\n    console.error('variant-values(query) error:', e);\n    res.status(500).json({\n      error: 'variant-values failed'\n    });\n  }\n});\n\n// 2) option-values (แบบ path)\nrouter.get('/products/:id/option-values', requireAuth, requireRole('admin'), async (req, res) => {\n  try {\n    const id = parseInt(req.params.id, 10);\n    const rows = await loadOptionValues(id);\n    res.json(rows);\n  } catch (e) {\n    console.error('option-values(path) error:', e);\n    res.status(500).json({\n      error: 'option-values failed'\n    });\n  }\n});\nrouter.get('/admin/products/:id/option-values', requireAuth, requireRole('admin'), async (req, res) => {\n  try {\n    const id = parseInt(req.params.id, 10);\n    const rows = await loadOptionValues(id);\n    res.json(rows);\n  } catch (e) {\n    console.error('admin option-values(path) error:', e);\n    res.status(500).json({\n      error: 'option-values failed'\n    });\n  }\n});\n// 2.1) option-values (แบบ query ?product_id=)\nrouter.get('/product_option_values', requireAuth, requireRole('admin'), async (req, res) => {\n  try {\n    const id = parseInt(String(req.query.product_id || ''), 10);\n    if (!Number.isFinite(id)) return res.status(400).json({\n      error: 'product_id is required'\n    });\n    const rows = await loadOptionValues(id);\n    res.json(rows);\n  } catch (e) {\n    console.error('option-values(query) error:', e);\n    res.status(500).json({\n      error: 'option-values failed'\n    });\n  }\n});","map":{"version":3,"names":["express","require","router","module","exports","db","requireAuth","requireRole","_req","_res","next","_role","viewExists","name","sql","rows","query","length","hasColumn","table","col","loadVariantValues","productId","hasLive","hasPV","loadOptionValues","hasOptPos","hasValPos","orderOpt","orderVal","get","req","res","id","parseInt","params","json","e","console","error","status","String","product_id","Number","isFinite"],"sources":["D:/project19/frontend/src/admin/VariantsManager.js"],"sourcesContent":["// backend/routes/variants.js\r\n// ------------------------------------------------------------\r\n// เติม \"compat routes\" สำหรับ endpoint เก่า/สำรองที่ฝั่ง frontend เรียกแล้ว 404\r\n// - GET /api/products/:id/variant-values\r\n// - GET /api/admin/products/:id/variant-values\r\n// - GET /api/product_variant_values?product_id=ID\r\n// - GET /api/products/:id/option-values\r\n// - GET /api/admin/products/:id/option-values\r\n// - GET /api/product_option_values?product_id=ID\r\n// ให้ชี้ไปยัง logic เดิมที่คุณใช้อยู่ (/api/variants/product/:id และ /api/variants/products/:id/options)\r\n// ------------------------------------------------------------\r\n\r\nconst express = require('express');\r\nconst router = module.exports = require('./_ensureRouter')(module, express);\r\n\r\n// ---- db loader (support ../db and ../db/db) ----\r\nlet db;\r\ntry { db = require('../db'); } catch { db = require('../db/db'); }\r\n\r\n// ---- auth middleware (fallback no-op if missing) ----\r\nconst { requireAuth, requireRole } = (() => {\r\n  try {\r\n    return require('../middleware/auth');\r\n  } catch {\r\n    return {\r\n      requireAuth: (_req, _res, next) => next(),\r\n      requireRole: (_role) => (_req, _res, next) => next(),\r\n    };\r\n  }\r\n})();\r\n\r\n/* ----------------------------------------\r\n   helpers: ตรวจสอบ view/column แบบเดียวกับของเดิม\r\n----------------------------------------- */\r\nasync function viewExists(name) {\r\n  const sql = `SELECT 1 FROM information_schema.views WHERE table_schema='public' AND table_name=$1 LIMIT 1`;\r\n  const { rows } = await db.query(sql, [name]);\r\n  return rows.length > 0;\r\n}\r\n\r\nasync function hasColumn(table, col) {\r\n  const sql = `\r\n    SELECT 1\r\n    FROM information_schema.columns\r\n    WHERE table_schema='public' AND table_name=$1 AND column_name=$2\r\n    LIMIT 1\r\n  `;\r\n  const { rows } = await db.query(sql, [table, col]);\r\n  return rows.length > 0;\r\n}\r\n\r\n/* ----------------------------------------\r\n   core loaders ที่ใช้ซ้ำ\r\n----------------------------------------- */\r\n\r\n// โหลด \"variant-values\" เหมือน /api/variants/product/:id\r\nasync function loadVariantValues(productId) {\r\n  const hasLive = await viewExists('v_product_variants_live_stock');\r\n\r\n  if (hasLive) {\r\n    // ใช้ view สด\r\n    const sql = `\r\n      SELECT\r\n        lv.variant_id,\r\n        lv.product_id,\r\n        lv.sku,\r\n        COALESCE(lv.price_override, p.price) AS price,\r\n        lv.stock::int                        AS stock,\r\n        COALESCE(lv.is_active, TRUE)         AS is_active,\r\n        lv.image_url,\r\n        COALESCE(\r\n          json_agg(\r\n            json_build_object('option_id', pvv.option_id, 'value_id', pvv.value_id)\r\n            ORDER BY pvv.option_id\r\n          ) FILTER (WHERE pvv.option_id IS NOT NULL),\r\n          '[]'\r\n        ) AS combo\r\n      FROM v_product_variants_live_stock lv\r\n      JOIN products p ON p.product_id = lv.product_id\r\n      LEFT JOIN product_variant_values pvv ON pvv.variant_id = lv.variant_id\r\n      WHERE lv.product_id = $1\r\n        AND COALESCE(lv.is_active, TRUE) = TRUE\r\n      GROUP BY lv.variant_id, lv.product_id, lv.sku, lv.price_override, lv.stock, lv.is_active, lv.image_url, p.price\r\n      ORDER BY lv.variant_id ASC\r\n    `;\r\n    const { rows } = await db.query(sql, [productId]);\r\n    return rows;\r\n  }\r\n\r\n  // fallback: ไม่มี view → join จากตาราง\r\n  // หมายเหตุ: ปรับชื่อคอลัมน์ให้เข้ากับสคีมาของคุณ ถ้าใช้ชื่ออื่น\r\n  const hasPV = await hasColumn('product_variants', 'product_id');\r\n  const sql = `\r\n    SELECT\r\n      v.variant_id,\r\n      v.product_id,\r\n      v.sku,\r\n      COALESCE(v.price_override, p.price) AS price,\r\n      COALESCE(v.stock, 0)::int           AS stock,\r\n      COALESCE(v.is_active, TRUE)         AS is_active,\r\n      v.image_url,\r\n      COALESCE(\r\n        json_agg(\r\n          json_build_object('option_id', pvv.option_id, 'value_id', pvv.value_id)\r\n          ORDER BY pvv.option_id\r\n        ) FILTER (WHERE pvv.option_id IS NOT NULL),\r\n        '[]'\r\n      ) AS combo\r\n    FROM product_variants v\r\n    JOIN products p ON p.product_id = v.product_id\r\n    LEFT JOIN product_variant_values pvv ON pvv.variant_id = v.variant_id\r\n    WHERE v.${hasPV ? 'product_id' : 'product_id'} = $1\r\n    GROUP BY v.variant_id, v.product_id, v.sku, v.price_override, v.stock, v.is_active, v.image_url, p.price\r\n    ORDER BY v.variant_id ASC\r\n  `;\r\n  const { rows } = await db.query(sql, [productId]);\r\n  return rows;\r\n}\r\n\r\n// โหลด \"option-values\" เหมือน /api/variants/products/:id/options\r\nasync function loadOptionValues(productId) {\r\n  const hasOptPos = await hasColumn('product_options', 'option_position');\r\n  const hasValPos = await hasColumn('product_option_values', 'value_position');\r\n  const orderOpt  = hasOptPos ? 'COALESCE(o.option_position, 0), o.option_id' : 'o.option_id';\r\n  const orderVal  = hasValPos ? 'COALESCE(v.value_position, 0), v.value_id'   : 'v.value_id';\r\n\r\n  const sql = `\r\n    SELECT\r\n      o.option_id,\r\n      o.option_name,\r\n      ${hasOptPos ? 'o.option_position' : 'NULL::int'} AS option_position,\r\n      COALESCE(\r\n        JSON_AGG(\r\n          JSON_BUILD_OBJECT(\r\n            'value_id', v.value_id,\r\n            'value_name', v.value_name,\r\n            ${hasValPos ? `'value_position', v.value_position,` : ``}\r\n            'option_id', v.option_id\r\n          )\r\n          ORDER BY ${orderVal}\r\n        ) FILTER (WHERE v.value_id IS NOT NULL),\r\n        '[]'\r\n      ) AS values\r\n    FROM product_options o\r\n    LEFT JOIN product_option_values v ON v.option_id = o.option_id\r\n    WHERE o.product_id = $1\r\n    GROUP BY o.option_id, o.option_name ${hasOptPos ? ', o.option_position' : ''}\r\n    ORDER BY ${orderOpt} ASC\r\n  `;\r\n  const { rows } = await db.query(sql, [productId]);\r\n  return rows;\r\n}\r\n\r\n/* ----------------------------------------\r\n   COMPAT ENDPOINTS (alias)\r\n----------------------------------------- */\r\n\r\n// 1) variant-values (แบบ path)\r\nrouter.get('/products/:id/variant-values', requireAuth, requireRole('admin'), async (req, res) => {\r\n  try {\r\n    const id = parseInt(req.params.id, 10);\r\n    const rows = await loadVariantValues(id);\r\n    res.json(rows);\r\n  } catch (e) {\r\n    console.error('variant-values(path) error:', e);\r\n    res.status(500).json({ error: 'variant-values failed' });\r\n  }\r\n});\r\nrouter.get('/admin/products/:id/variant-values', requireAuth, requireRole('admin'), async (req, res) => {\r\n  try {\r\n    const id = parseInt(req.params.id, 10);\r\n    const rows = await loadVariantValues(id);\r\n    res.json(rows);\r\n  } catch (e) {\r\n    console.error('admin variant-values(path) error:', e);\r\n    res.status(500).json({ error: 'variant-values failed' });\r\n  }\r\n});\r\n// 1.1) variant-values (แบบ query ?product_id=)\r\nrouter.get('/product_variant_values', requireAuth, requireRole('admin'), async (req, res) => {\r\n  try {\r\n    const id = parseInt(String(req.query.product_id || ''), 10);\r\n    if (!Number.isFinite(id)) return res.status(400).json({ error: 'product_id is required' });\r\n    const rows = await loadVariantValues(id);\r\n    res.json(rows);\r\n  } catch (e) {\r\n    console.error('variant-values(query) error:', e);\r\n    res.status(500).json({ error: 'variant-values failed' });\r\n  }\r\n});\r\n\r\n// 2) option-values (แบบ path)\r\nrouter.get('/products/:id/option-values', requireAuth, requireRole('admin'), async (req, res) => {\r\n  try {\r\n    const id = parseInt(req.params.id, 10);\r\n    const rows = await loadOptionValues(id);\r\n    res.json(rows);\r\n  } catch (e) {\r\n    console.error('option-values(path) error:', e);\r\n    res.status(500).json({ error: 'option-values failed' });\r\n  }\r\n});\r\nrouter.get('/admin/products/:id/option-values', requireAuth, requireRole('admin'), async (req, res) => {\r\n  try {\r\n    const id = parseInt(req.params.id, 10);\r\n    const rows = await loadOptionValues(id);\r\n    res.json(rows);\r\n  } catch (e) {\r\n    console.error('admin option-values(path) error:', e);\r\n    res.status(500).json({ error: 'option-values failed' });\r\n  }\r\n});\r\n// 2.1) option-values (แบบ query ?product_id=)\r\nrouter.get('/product_option_values', requireAuth, requireRole('admin'), async (req, res) => {\r\n  try {\r\n    const id = parseInt(String(req.query.product_id || ''), 10);\r\n    if (!Number.isFinite(id)) return res.status(400).json({ error: 'product_id is required' });\r\n    const rows = await loadOptionValues(id);\r\n    res.json(rows);\r\n  } catch (e) {\r\n    console.error('option-values(query) error:', e);\r\n    res.status(500).json({ error: 'option-values failed' });\r\n  }\r\n});\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}