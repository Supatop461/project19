{"ast":null,"code":"var _jsxFileName = \"D:\\\\project19\\\\frontend\\\\src\\\\components\\\\ThaiAddressPicker.js\",\n  _s = $RefreshSig$();\n// src/components/ThaiAddressPicker.js\n// เลือก จังหวัด → อำเภอ → ตำบล แบบโหลดทีละชั้น (ทนพาธ/คีย์สุดๆ + fallback ได้)\n// ไฮไลท์:\n//  - auto-fallback basePath: ลอง /thai → /data → '' ถ้าอันแรกพัง\n//  - โหลด \"อำเภอ/ตำบล\" ถ้าไฟล์รายจังหวัด/รายอำเภอไม่เจอ → ใช้ไฟล์รวม amphures.json / tambons.json แล้ว filter\n//  - รองรับคีย์ JSON หลากหลาย (id/code/PROVINCE_ID/...)\n//  - เก็บทั้งชื่อ + *_id + *_code ในฟอร์ม เพื่อแก้ไข/พรีเลือกได้แม่น\n\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\n\n/* -------------------- Helpers: ดึงค่าคีย์แบบยืดหยุ่น -------------------- */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pick = (o, keys) => {\n  for (const k of keys) if (o && o[k] != null) return o[k];\n  return null;\n};\n// จังหวัด\nconst provIdOf = o => pick(o, ['province_id', 'PROVINCE_ID', 'id', 'code']); // ใช้เป็น key ภายใน\nconst provCodeOf = o => pick(o, ['code', 'province_code', 'PROVINCE_CODE', 'id']); // ไว้ส่งกลับ/อ้างอิง\nconst provNameOf = o => pick(o, ['name_th', 'name', 'PROVINCE_NAME']) || '';\n// อำเภอ\nconst distIdOf = o => pick(o, ['amphure_id', 'AMPHUR_ID', 'district_id', 'DISTRICT_ID', 'id', 'code']);\nconst distNameOf = o => pick(o, ['name_th', 'name', 'AMPHUR_NAME', 'DISTRICT_NAME']) || '';\nconst distProvIdOf = o => pick(o, ['province_id', 'PROVINCE_ID']); // อำเภอชี้กลับจังหวัด\nconst distProvCodeOf = o => pick(o, ['province_code', 'PROVINCE_CODE']);\n// ตำบล\nconst subIdOf = o => pick(o, ['tambon_id', 'TAMBON_ID', 'subdistrict_id', 'SUBDISTRICT_ID', 'id', 'code']);\nconst subNameOf = o => pick(o, ['name_th', 'name', 'TAMBON_NAME', 'SUBDISTRICT_NAME']) || '';\nconst subDistIdOf = o => pick(o, ['amphure_id', 'AMPHUR_ID', 'district_id', 'DISTRICT_ID']); // ตำบลชี้กลับอำเภอ\nconst subZipOf = o => pick(o, ['zip_code', 'zipcode', 'POSTCODE', 'postcode']);\nconst joinUrl = (base, path) => `${String(base).replace(/\\/+$/, '')}/${String(path).replace(/^\\/+/, '')}`;\n\n/* ================================ Component ================================ */\nexport default function ThaiAddressPicker({\n  value,\n  onChange,\n  basePath = '/thai',\n  basePathCandidates = ['/thai', '/data', ''],\n  disabled = false\n}) {\n  _s();\n  const [provinces, setProvinces] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [subs, setSubs] = useState([]);\n  const [loadingProv, setLoadingProv] = useState(true);\n  const [loadingDist, setLoadingDist] = useState(false);\n  const [loadingSub, setLoadingSub] = useState(false);\n  const [baseUsed, setBaseUsed] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const cacheRef = useRef({\n    districts: {},\n    subs: {}\n  });\n  const patch = obj => onChange && onChange(obj);\n\n  /* -------------------- โหลด \"จังหวัด\" พร้อมลองหลาย basePath -------------------- */\n  useEffect(() => {\n    let alive = true;\n    (async () => {\n      setLoadingProv(true);\n      setErrMsg('');\n      const candidates = [basePath, ...basePathCandidates].filter((v, i, a) => v != null && a.indexOf(v) === i);\n      let loaded = false,\n        lastError = '';\n      for (const bp of candidates) {\n        try {\n          const url = joinUrl(bp || '', 'provinces.json');\n          const res = await fetch(url, {\n            cache: 'force-cache'\n          });\n          if (!res.ok) throw new Error(`HTTP ${res.status}`);\n          const js = await res.json();\n          if (!Array.isArray(js) || js.length === 0) throw new Error('empty provinces');\n          if (!alive) return;\n          setProvinces(js);\n          setBaseUsed(bp || '');\n          loaded = true;\n          console.info('[ThaiAddressPicker] provinces loaded from', url);\n          break;\n        } catch (e) {\n          lastError = (e === null || e === void 0 ? void 0 : e.message) || String(e);\n        }\n      }\n      if (!alive) return;\n      if (!loaded) {\n        setProvinces([]);\n        setBaseUsed('');\n        setErrMsg('โหลด provinces.json ไม่ได้ — ตรวจพาธใน public (เช่น /thai หรือ /data)');\n        console.error('[ThaiAddressPicker] provinces load failed on', candidates, 'lastError=', lastError);\n      }\n      setLoadingProv(false);\n    })();\n    return () => {\n      alive = false;\n    };\n  }, [basePath, JSON.stringify(basePathCandidates)]);\n\n  /* -------------------- ค่าปัจจุบัน (ใช้ id เป็นหลัก ถ้ามี) -------------------- */\n  const currentProvinceId = useMemo(() => {\n    if (value !== null && value !== void 0 && value.province_id) return String(value.province_id);\n    const p = provinces.find(x => provNameOf(x).trim() === ((value === null || value === void 0 ? void 0 : value.province) || '').trim());\n    return p ? String(provIdOf(p)) : '';\n  }, [value === null || value === void 0 ? void 0 : value.province_id, value === null || value === void 0 ? void 0 : value.province, provinces]);\n  const currentDistrictId = useMemo(() => {\n    if (value !== null && value !== void 0 && value.district_id) return String(value.district_id);\n    const d = districts.find(x => distNameOf(x).trim() === ((value === null || value === void 0 ? void 0 : value.district) || '').trim());\n    return d ? String(distIdOf(d)) : '';\n  }, [value === null || value === void 0 ? void 0 : value.district_id, value === null || value === void 0 ? void 0 : value.district, districts]);\n\n  /* -------------------- เมื่อเลือก/เปลี่ยน \"จังหวัด\" → โหลดอำเภอ -------------------- */\n  useEffect(() => {\n    const provId = currentProvinceId;\n    if (!provId || !baseUsed) {\n      setDistricts([]);\n      setSubs([]);\n      return;\n    }\n    if (cacheRef.current.districts[provId]) {\n      setDistricts(cacheRef.current.districts[provId]);\n      return;\n    }\n    let alive = true;\n    (async () => {\n      setLoadingDist(true);\n      try {\n        var _provCodeOf;\n        // ลองไฟล์รายจังหวัดก่อน (ลอง key หลายแบบ: '10', '010', '0010', และ code จาก provinces)\n        const provObj = provinces.find(p => String(provIdOf(p)) === String(provId)) || {};\n        const tryKeys = Array.from(new Set([String(provId), String((_provCodeOf = provCodeOf(provObj)) !== null && _provCodeOf !== void 0 ? _provCodeOf : ''), String(provId).padStart(2, '0'), String(provId).padStart(3, '0')].filter(Boolean)));\n        let data = null,\n          lastErr = '';\n        for (const k of tryKeys) {\n          try {\n            const url = joinUrl(baseUsed, `districts/${k}.json`);\n            const res = await fetch(url, {\n              cache: 'force-cache'\n            });\n            if (!res.ok) throw new Error(`HTTP ${res.status}`);\n            const js = await res.json();\n            if (Array.isArray(js) && js.length) {\n              data = js;\n              console.info('[ThaiAddressPicker] districts from', url);\n              break;\n            }\n          } catch (e) {\n            lastErr = (e === null || e === void 0 ? void 0 : e.message) || String(e);\n          }\n        }\n\n        // ถ้าไฟล์รายจังหวัดไม่เจอ → ใช้ amphures.json แล้ว filter ด้วยหลายคีย์\n        if (!data) {\n          var _provCodeOf2;\n          const urlAll = joinUrl(baseUsed, 'amphures.json');\n          const r2 = await fetch(urlAll, {\n            cache: 'force-cache'\n          });\n          if (!r2.ok) throw new Error(`HTTP ${r2.status} on amphures.json`);\n          const all = await r2.json();\n          const provCandidates = Array.from(new Set([String(provId), String((_provCodeOf2 = provCodeOf(provObj)) !== null && _provCodeOf2 !== void 0 ? _provCodeOf2 : '')].filter(Boolean)));\n          const filtered = (all || []).filter(a => {\n            var _ref, _distProvIdOf;\n            const pid = String((_ref = (_distProvIdOf = distProvIdOf(a)) !== null && _distProvIdOf !== void 0 ? _distProvIdOf : distProvCodeOf(a)) !== null && _ref !== void 0 ? _ref : '');\n            return pid && provCandidates.includes(pid);\n          });\n          data = filtered;\n          console.info('[ThaiAddressPicker] districts via amphures.json; provCandidates=', provCandidates, 'count=', data.length);\n        }\n        if (!alive) return;\n        const arr = Array.isArray(data) ? data : [];\n        cacheRef.current.districts[provId] = arr;\n        setDistricts(arr);\n        if (arr.length === 0) console.warn('[ThaiAddressPicker] districts empty for provinceId=', provId, 'base=', baseUsed);\n      } catch (e) {\n        console.error('[ThaiAddressPicker] districts load error:', e);\n        if (alive) setDistricts([]);\n      } finally {\n        if (alive) setLoadingDist(false);\n      }\n    })();\n    return () => {\n      alive = false;\n    };\n  }, [currentProvinceId, baseUsed, provinces]);\n\n  /* -------------------- เมื่อเลือก/เปลี่ยน \"อำเภอ\" → โหลดตำบล -------------------- */\n  useEffect(() => {\n    const distId = currentDistrictId;\n    if (!distId || !baseUsed) {\n      setSubs([]);\n      return;\n    }\n    if (cacheRef.current.subs[distId]) {\n      setSubs(cacheRef.current.subs[distId]);\n      return;\n    }\n    let alive = true;\n    (async () => {\n      setLoadingSub(true);\n      try {\n        // ลองไฟล์รายอำเภอก่อน\n        const tryKeys = Array.from(new Set([String(distId), String(distId).padStart(2, '0'), String(distId).padStart(3, '0')]));\n        let data = null,\n          lastErr = '';\n        for (const k of tryKeys) {\n          try {\n            const url = joinUrl(baseUsed, `subdistricts/${k}.json`);\n            const res = await fetch(url, {\n              cache: 'force-cache'\n            });\n            if (!res.ok) throw new Error(`HTTP ${res.status}`);\n            const js = await res.json();\n            if (Array.isArray(js) && js.length) {\n              data = js;\n              console.info('[ThaiAddressPicker] subdistricts from', url);\n              break;\n            }\n          } catch (e) {\n            lastErr = (e === null || e === void 0 ? void 0 : e.message) || String(e);\n          }\n        }\n\n        // ถ้าไฟล์รายอำเภอไม่เจอ → ใช้ tambons.json แล้ว filter ด้วยหลายคีย์\n        if (!data) {\n          const urlAll = joinUrl(baseUsed, 'tambons.json');\n          const r2 = await fetch(urlAll, {\n            cache: 'force-cache'\n          });\n          if (!r2.ok) throw new Error(`HTTP ${r2.status} on tambons.json`);\n          const all = await r2.json();\n          const filtered = (all || []).filter(t => {\n            var _subDistIdOf;\n            const did = String((_subDistIdOf = subDistIdOf(t)) !== null && _subDistIdOf !== void 0 ? _subDistIdOf : '');\n            return did === String(distId);\n          });\n          data = filtered;\n          console.info('[ThaiAddressPicker] subdistricts via tambons.json; count=', data.length);\n        }\n        if (!alive) return;\n        const arr = Array.isArray(data) ? data : [];\n        cacheRef.current.subs[distId] = arr;\n        setSubs(arr);\n        if (arr.length === 0) console.warn('[ThaiAddressPicker] subdistricts empty for districtId=', distId, 'base=', baseUsed);\n      } catch (e) {\n        console.error('[ThaiAddressPicker] subdistricts load error:', e);\n        if (alive) setSubs([]);\n      } finally {\n        if (alive) setLoadingSub(false);\n      }\n    })();\n    return () => {\n      alive = false;\n    };\n  }, [currentDistrictId, baseUsed]);\n\n  /* -------------------- onChange ของ select ทั้ง 3 ชั้น -------------------- */\n  const handleProvince = e => {\n    const id = e.target.value || '';\n    const sel = provinces.find(p => String(provIdOf(p)) === String(id)) || null;\n    patch({\n      province: sel ? provNameOf(sel) : '',\n      province_id: sel ? provIdOf(sel) : null,\n      province_code: sel ? provCodeOf(sel) : null,\n      district: '',\n      district_id: null,\n      district_code: null,\n      subdistrict: '',\n      subdistrict_id: null,\n      subdistrict_code: null,\n      postal_code: ''\n    });\n  };\n  const handleDistrict = e => {\n    const id = e.target.value || '';\n    const sel = districts.find(d => String(distIdOf(d)) === String(id)) || null;\n    patch({\n      district: sel ? distNameOf(sel) : '',\n      district_id: sel ? distIdOf(sel) : null,\n      district_code: sel ? distIdOf(sel) : null,\n      // บางชุดไม่มี code แยก ใช้ id แทน\n      subdistrict: '',\n      subdistrict_id: null,\n      subdistrict_code: null,\n      postal_code: ''\n    });\n  };\n  const handleSubdistrict = e => {\n    const id = e.target.value || '';\n    const sel = subs.find(s => String(subIdOf(s)) === String(id)) || null;\n    patch({\n      subdistrict: sel ? subNameOf(sel) : '',\n      subdistrict_id: sel ? subIdOf(sel) : null,\n      subdistrict_code: sel ? subIdOf(sel) : null,\n      postal_code: sel ? String(subZipOf(sel) || '') : ''\n    });\n  };\n\n  /* -------------------- disabled flags -------------------- */\n  const disProv = disabled || loadingProv || !!errMsg;\n  const disDist = disabled || !currentProvinceId || loadingDist || !!errMsg;\n  const disSub = disabled || !currentDistrictId || loadingSub || !!errMsg;\n\n  /* -------------------- UI -------------------- */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gap: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr',\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: currentProvinceId,\n        onChange: handleProvince,\n        disabled: disProv,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: loadingProv ? 'กำลังโหลดจังหวัด...' : errMsg ? 'โหลดจังหวัดไม่สำเร็จ' : '-- เลือกจังหวัด --'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), provinces.map(p => {\n          var _provIdOf;\n          const id = String((_provIdOf = provIdOf(p)) !== null && _provIdOf !== void 0 ? _provIdOf : '');\n          const name = provNameOf(p);\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: currentDistrictId,\n        onChange: handleDistrict,\n        disabled: disDist,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: loadingDist ? 'กำลังโหลดอำเภอ...' : currentProvinceId ? '-- เลือกอำเภอ --' : 'เลือกจังหวัดก่อน'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), districts.map(d => {\n          var _distIdOf;\n          const id = String((_distIdOf = distIdOf(d)) !== null && _distIdOf !== void 0 ? _distIdOf : '');\n          const name = distNameOf(d);\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: value !== null && value !== void 0 && value.subdistrict_id ? String(value.subdistrict_id) : '',\n        onChange: handleSubdistrict,\n        disabled: disSub,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: loadingSub ? 'กำลังโหลดตำบล...' : currentDistrictId ? '-- เลือกตำบล --' : 'เลือกอำเภอก่อน'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), subs.map(s => {\n          var _subIdOf;\n          const id = String((_subIdOf = subIdOf(s)) !== null && _subIdOf !== void 0 ? _subIdOf : '');\n          const name = subNameOf(s);\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E44\\u0E1B\\u0E23\\u0E29\\u0E13\\u0E35\\u0E22\\u0E4C\",\n      value: (value === null || value === void 0 ? void 0 : value.postal_code) || '',\n      onChange: e => patch({\n        postal_code: e.target.value\n      }),\n      disabled: disabled || !!errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), baseUsed ? /*#__PURE__*/_jsxDEV(\"small\", {\n      style: {\n        color: '#999'\n      },\n      children: [\"\\u0E43\\u0E0A\\u0E49\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E08\\u0E32\\u0E01: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: baseUsed || '/'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 65\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 19\n    }, this) : null, errMsg ? /*#__PURE__*/_jsxDEV(\"small\", {\n      style: {\n        color: '#c00'\n      },\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 19\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n_s(ThaiAddressPicker, \"1iomvRAATA9m0d1L8R6DTKHtVIo=\");\n_c = ThaiAddressPicker;\nvar _c;\n$RefreshReg$(_c, \"ThaiAddressPicker\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","pick","o","keys","k","provIdOf","provCodeOf","provNameOf","distIdOf","distNameOf","distProvIdOf","distProvCodeOf","subIdOf","subNameOf","subDistIdOf","subZipOf","joinUrl","base","path","String","replace","ThaiAddressPicker","value","onChange","basePath","basePathCandidates","disabled","_s","provinces","setProvinces","districts","setDistricts","subs","setSubs","loadingProv","setLoadingProv","loadingDist","setLoadingDist","loadingSub","setLoadingSub","baseUsed","setBaseUsed","errMsg","setErrMsg","cacheRef","patch","obj","alive","candidates","filter","v","i","a","indexOf","loaded","lastError","bp","url","res","fetch","cache","ok","Error","status","js","json","Array","isArray","length","console","info","e","message","error","JSON","stringify","currentProvinceId","province_id","p","find","x","trim","province","currentDistrictId","district_id","d","district","provId","current","_provCodeOf","provObj","tryKeys","from","Set","padStart","Boolean","data","lastErr","_provCodeOf2","urlAll","r2","all","provCandidates","filtered","_ref","_distProvIdOf","pid","includes","arr","warn","distId","t","_subDistIdOf","did","handleProvince","id","target","sel","province_code","district_code","subdistrict","subdistrict_id","subdistrict_code","postal_code","handleDistrict","handleSubdistrict","s","disProv","disDist","disSub","style","display","gap","children","gridTemplateColumns","fileName","_jsxFileName","lineNumber","columnNumber","map","_provIdOf","name","_distIdOf","_subIdOf","placeholder","color","_c","$RefreshReg$"],"sources":["D:/project19/frontend/src/components/ThaiAddressPicker.js"],"sourcesContent":["// src/components/ThaiAddressPicker.js\r\n// เลือก จังหวัด → อำเภอ → ตำบล แบบโหลดทีละชั้น (ทนพาธ/คีย์สุดๆ + fallback ได้)\r\n// ไฮไลท์:\r\n//  - auto-fallback basePath: ลอง /thai → /data → '' ถ้าอันแรกพัง\r\n//  - โหลด \"อำเภอ/ตำบล\" ถ้าไฟล์รายจังหวัด/รายอำเภอไม่เจอ → ใช้ไฟล์รวม amphures.json / tambons.json แล้ว filter\r\n//  - รองรับคีย์ JSON หลากหลาย (id/code/PROVINCE_ID/...)\r\n//  - เก็บทั้งชื่อ + *_id + *_code ในฟอร์ม เพื่อแก้ไข/พรีเลือกได้แม่น\r\n\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\r\n\r\n/* -------------------- Helpers: ดึงค่าคีย์แบบยืดหยุ่น -------------------- */\r\nconst pick = (o, keys) => {\r\n  for (const k of keys) if (o && o[k] != null) return o[k];\r\n  return null;\r\n};\r\n// จังหวัด\r\nconst provIdOf   = (o) => pick(o, ['province_id','PROVINCE_ID','id','code']);        // ใช้เป็น key ภายใน\r\nconst provCodeOf = (o) => pick(o, ['code','province_code','PROVINCE_CODE','id']);     // ไว้ส่งกลับ/อ้างอิง\r\nconst provNameOf = (o) => pick(o, ['name_th','name','PROVINCE_NAME']) || '';\r\n// อำเภอ\r\nconst distIdOf       = (o) => pick(o, ['amphure_id','AMPHUR_ID','district_id','DISTRICT_ID','id','code']);\r\nconst distNameOf     = (o) => pick(o, ['name_th','name','AMPHUR_NAME','DISTRICT_NAME']) || '';\r\nconst distProvIdOf   = (o) => pick(o, ['province_id','PROVINCE_ID']);  // อำเภอชี้กลับจังหวัด\r\nconst distProvCodeOf = (o) => pick(o, ['province_code','PROVINCE_CODE']);\r\n// ตำบล\r\nconst subIdOf     = (o) => pick(o, ['tambon_id','TAMBON_ID','subdistrict_id','SUBDISTRICT_ID','id','code']);\r\nconst subNameOf   = (o) => pick(o, ['name_th','name','TAMBON_NAME','SUBDISTRICT_NAME']) || '';\r\nconst subDistIdOf = (o) => pick(o, ['amphure_id','AMPHUR_ID','district_id','DISTRICT_ID']); // ตำบลชี้กลับอำเภอ\r\nconst subZipOf    = (o) => pick(o, ['zip_code','zipcode','POSTCODE','postcode']);\r\n\r\nconst joinUrl = (base, path) => `${String(base).replace(/\\/+$/, '')}/${String(path).replace(/^\\/+/, '')}`;\r\n\r\n/* ================================ Component ================================ */\r\nexport default function ThaiAddressPicker({\r\n  value,\r\n  onChange,\r\n  basePath = '/thai',\r\n  basePathCandidates = ['/thai', '/data', ''],\r\n  disabled = false,\r\n}) {\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  const [subs, setSubs]           = useState([]);\r\n\r\n  const [loadingProv, setLoadingProv] = useState(true);\r\n  const [loadingDist, setLoadingDist] = useState(false);\r\n  const [loadingSub,  setLoadingSub ] = useState(false);\r\n\r\n  const [baseUsed, setBaseUsed] = useState('');\r\n  const [errMsg, setErrMsg]     = useState('');\r\n\r\n  const cacheRef = useRef({ districts: {}, subs: {} });\r\n  const patch = (obj) => onChange && onChange(obj);\r\n\r\n  /* -------------------- โหลด \"จังหวัด\" พร้อมลองหลาย basePath -------------------- */\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      setLoadingProv(true);\r\n      setErrMsg('');\r\n\r\n      const candidates = [basePath, ...basePathCandidates].filter((v,i,a) => v!=null && a.indexOf(v)===i);\r\n      let loaded = false, lastError = '';\r\n\r\n      for (const bp of candidates) {\r\n        try {\r\n          const url = joinUrl(bp||'', 'provinces.json');\r\n          const res = await fetch(url, { cache:'force-cache' });\r\n          if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n          const js = await res.json();\r\n          if (!Array.isArray(js) || js.length === 0) throw new Error('empty provinces');\r\n          if (!alive) return;\r\n          setProvinces(js);\r\n          setBaseUsed(bp || '');\r\n          loaded = true;\r\n          console.info('[ThaiAddressPicker] provinces loaded from', url);\r\n          break;\r\n        } catch (e) { lastError = e?.message || String(e); }\r\n      }\r\n\r\n      if (!alive) return;\r\n      if (!loaded) {\r\n        setProvinces([]);\r\n        setBaseUsed('');\r\n        setErrMsg('โหลด provinces.json ไม่ได้ — ตรวจพาธใน public (เช่น /thai หรือ /data)');\r\n        console.error('[ThaiAddressPicker] provinces load failed on', candidates, 'lastError=', lastError);\r\n      }\r\n      setLoadingProv(false);\r\n    })();\r\n    return () => { alive = false; };\r\n  }, [basePath, JSON.stringify(basePathCandidates)]);\r\n\r\n  /* -------------------- ค่าปัจจุบัน (ใช้ id เป็นหลัก ถ้ามี) -------------------- */\r\n  const currentProvinceId = useMemo(() => {\r\n    if (value?.province_id) return String(value.province_id);\r\n    const p = provinces.find(x => provNameOf(x).trim() === (value?.province||'').trim());\r\n    return p ? String(provIdOf(p)) : '';\r\n  }, [value?.province_id, value?.province, provinces]);\r\n\r\n  const currentDistrictId = useMemo(() => {\r\n    if (value?.district_id) return String(value.district_id);\r\n    const d = districts.find(x => distNameOf(x).trim() === (value?.district||'').trim());\r\n    return d ? String(distIdOf(d)) : '';\r\n  }, [value?.district_id, value?.district, districts]);\r\n\r\n  /* -------------------- เมื่อเลือก/เปลี่ยน \"จังหวัด\" → โหลดอำเภอ -------------------- */\r\n  useEffect(() => {\r\n    const provId = currentProvinceId;\r\n    if (!provId || !baseUsed) { setDistricts([]); setSubs([]); return; }\r\n\r\n    if (cacheRef.current.districts[provId]) { setDistricts(cacheRef.current.districts[provId]); return; }\r\n\r\n    let alive = true;\r\n    (async () => {\r\n      setLoadingDist(true);\r\n      try {\r\n        // ลองไฟล์รายจังหวัดก่อน (ลอง key หลายแบบ: '10', '010', '0010', และ code จาก provinces)\r\n        const provObj = provinces.find(p => String(provIdOf(p)) === String(provId)) || {};\r\n        const tryKeys = Array.from(new Set([\r\n          String(provId),\r\n          String(provCodeOf(provObj) ?? ''),\r\n          String(provId).padStart(2,'0'),\r\n          String(provId).padStart(3,'0'),\r\n        ].filter(Boolean)));\r\n\r\n        let data = null, lastErr = '';\r\n        for (const k of tryKeys) {\r\n          try {\r\n            const url = joinUrl(baseUsed, `districts/${k}.json`);\r\n            const res = await fetch(url, { cache:'force-cache' });\r\n            if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n            const js = await res.json();\r\n            if (Array.isArray(js) && js.length) { data = js; console.info('[ThaiAddressPicker] districts from', url); break; }\r\n          } catch (e) { lastErr = e?.message || String(e); }\r\n        }\r\n\r\n        // ถ้าไฟล์รายจังหวัดไม่เจอ → ใช้ amphures.json แล้ว filter ด้วยหลายคีย์\r\n        if (!data) {\r\n          const urlAll = joinUrl(baseUsed, 'amphures.json');\r\n          const r2 = await fetch(urlAll, { cache:'force-cache' });\r\n          if (!r2.ok) throw new Error(`HTTP ${r2.status} on amphures.json`);\r\n          const all = await r2.json();\r\n\r\n          const provCandidates = Array.from(new Set([\r\n            String(provId),\r\n            String(provCodeOf(provObj) ?? ''),\r\n          ].filter(Boolean)));\r\n\r\n          const filtered = (all || []).filter(a => {\r\n            const pid = String(distProvIdOf(a) ?? distProvCodeOf(a) ?? '');\r\n            return pid && provCandidates.includes(pid);\r\n          });\r\n          data = filtered;\r\n          console.info('[ThaiAddressPicker] districts via amphures.json; provCandidates=', provCandidates, 'count=', data.length);\r\n        }\r\n\r\n        if (!alive) return;\r\n        const arr = Array.isArray(data) ? data : [];\r\n        cacheRef.current.districts[provId] = arr;\r\n        setDistricts(arr);\r\n        if (arr.length === 0) console.warn('[ThaiAddressPicker] districts empty for provinceId=', provId, 'base=', baseUsed);\r\n      } catch (e) {\r\n        console.error('[ThaiAddressPicker] districts load error:', e);\r\n        if (alive) setDistricts([]);\r\n      } finally {\r\n        if (alive) setLoadingDist(false);\r\n      }\r\n    })();\r\n\r\n    return () => { alive = false; };\r\n  }, [currentProvinceId, baseUsed, provinces]);\r\n\r\n  /* -------------------- เมื่อเลือก/เปลี่ยน \"อำเภอ\" → โหลดตำบล -------------------- */\r\n  useEffect(() => {\r\n    const distId = currentDistrictId;\r\n    if (!distId || !baseUsed) { setSubs([]); return; }\r\n\r\n    if (cacheRef.current.subs[distId]) { setSubs(cacheRef.current.subs[distId]); return; }\r\n\r\n    let alive = true;\r\n    (async () => {\r\n      setLoadingSub(true);\r\n      try {\r\n        // ลองไฟล์รายอำเภอก่อน\r\n        const tryKeys = Array.from(new Set([\r\n          String(distId),\r\n          String(distId).padStart(2,'0'),\r\n          String(distId).padStart(3,'0'),\r\n        ]));\r\n        let data = null, lastErr = '';\r\n        for (const k of tryKeys) {\r\n          try {\r\n            const url = joinUrl(baseUsed, `subdistricts/${k}.json`);\r\n            const res = await fetch(url, { cache:'force-cache' });\r\n            if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n            const js = await res.json();\r\n            if (Array.isArray(js) && js.length) { data = js; console.info('[ThaiAddressPicker] subdistricts from', url); break; }\r\n          } catch (e) { lastErr = e?.message || String(e); }\r\n        }\r\n\r\n        // ถ้าไฟล์รายอำเภอไม่เจอ → ใช้ tambons.json แล้ว filter ด้วยหลายคีย์\r\n        if (!data) {\r\n          const urlAll = joinUrl(baseUsed, 'tambons.json');\r\n          const r2 = await fetch(urlAll, { cache:'force-cache' });\r\n          if (!r2.ok) throw new Error(`HTTP ${r2.status} on tambons.json`);\r\n          const all = await r2.json();\r\n\r\n          const filtered = (all || []).filter(t => {\r\n            const did = String(subDistIdOf(t) ?? '');\r\n            return did === String(distId);\r\n          });\r\n          data = filtered;\r\n          console.info('[ThaiAddressPicker] subdistricts via tambons.json; count=', data.length);\r\n        }\r\n\r\n        if (!alive) return;\r\n        const arr = Array.isArray(data) ? data : [];\r\n        cacheRef.current.subs[distId] = arr;\r\n        setSubs(arr);\r\n        if (arr.length === 0) console.warn('[ThaiAddressPicker] subdistricts empty for districtId=', distId, 'base=', baseUsed);\r\n      } catch (e) {\r\n        console.error('[ThaiAddressPicker] subdistricts load error:', e);\r\n        if (alive) setSubs([]);\r\n      } finally {\r\n        if (alive) setLoadingSub(false);\r\n      }\r\n    })();\r\n\r\n    return () => { alive = false; };\r\n  }, [currentDistrictId, baseUsed]);\r\n\r\n  /* -------------------- onChange ของ select ทั้ง 3 ชั้น -------------------- */\r\n  const handleProvince = (e) => {\r\n    const id  = e.target.value || '';\r\n    const sel = provinces.find(p => String(provIdOf(p)) === String(id)) || null;\r\n    patch({\r\n      province:       sel ? provNameOf(sel) : '',\r\n      province_id:    sel ? provIdOf(sel)   : null,\r\n      province_code:  sel ? provCodeOf(sel) : null,\r\n      district: '', district_id: null, district_code: null,\r\n      subdistrict: '', subdistrict_id: null, subdistrict_code: null,\r\n      postal_code: '',\r\n    });\r\n  };\r\n\r\n  const handleDistrict = (e) => {\r\n    const id  = e.target.value || '';\r\n    const sel = districts.find(d => String(distIdOf(d)) === String(id)) || null;\r\n    patch({\r\n      district:       sel ? distNameOf(sel) : '',\r\n      district_id:    sel ? distIdOf(sel)   : null,\r\n      district_code:  sel ? distIdOf(sel)   : null, // บางชุดไม่มี code แยก ใช้ id แทน\r\n      subdistrict: '', subdistrict_id: null, subdistrict_code: null,\r\n      postal_code: '',\r\n    });\r\n  };\r\n\r\n  const handleSubdistrict = (e) => {\r\n    const id  = e.target.value || '';\r\n    const sel = subs.find(s => String(subIdOf(s)) === String(id)) || null;\r\n    patch({\r\n      subdistrict:      sel ? subNameOf(sel) : '',\r\n      subdistrict_id:   sel ? subIdOf(sel)   : null,\r\n      subdistrict_code: sel ? subIdOf(sel)   : null,\r\n      postal_code:      sel ? String(subZipOf(sel) || '') : '',\r\n    });\r\n  };\r\n\r\n  /* -------------------- disabled flags -------------------- */\r\n  const disProv = disabled || loadingProv || !!errMsg;\r\n  const disDist = disabled || !currentProvinceId || loadingDist || !!errMsg;\r\n  const disSub  = disabled || !currentDistrictId || loadingSub  || !!errMsg;\r\n\r\n  /* -------------------- UI -------------------- */\r\n  return (\r\n    <div style={{ display: 'grid', gap: 8 }}>\r\n      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: 8 }}>\r\n        {/* จังหวัด: ใช้ province_id เป็น value ภายใน */}\r\n        <select value={currentProvinceId} onChange={handleProvince} disabled={disProv}>\r\n          <option value=\"\">\r\n            {loadingProv ? 'กำลังโหลดจังหวัด...' : (errMsg ? 'โหลดจังหวัดไม่สำเร็จ' : '-- เลือกจังหวัด --')}\r\n          </option>\r\n          {provinces.map(p => {\r\n            const id   = String(provIdOf(p) ?? '');\r\n            const name = provNameOf(p);\r\n            return <option key={id} value={id}>{name}</option>;\r\n          })}\r\n        </select>\r\n\r\n        {/* อำเภอ: ใช้ district_id เป็น value */}\r\n        <select value={currentDistrictId} onChange={handleDistrict} disabled={disDist}>\r\n          <option value=\"\">\r\n            {loadingDist ? 'กำลังโหลดอำเภอ...' : (currentProvinceId ? '-- เลือกอำเภอ --' : 'เลือกจังหวัดก่อน')}\r\n          </option>\r\n          {districts.map(d => {\r\n            const id   = String(distIdOf(d) ?? '');\r\n            const name = distNameOf(d);\r\n            return <option key={id} value={id}>{name}</option>;\r\n          })}\r\n        </select>\r\n\r\n        {/* ตำบล: ใช้ subdistrict_id เป็น value */}\r\n        <select\r\n          value={ value?.subdistrict_id ? String(value.subdistrict_id) : '' }\r\n          onChange={handleSubdistrict}\r\n          disabled={disSub}\r\n        >\r\n          <option value=\"\">\r\n            {loadingSub ? 'กำลังโหลดตำบล...' : (currentDistrictId ? '-- เลือกตำบล --' : 'เลือกอำเภอก่อน')}\r\n          </option>\r\n          {subs.map(s => {\r\n            const id   = String(subIdOf(s) ?? '');\r\n            const name = subNameOf(s);\r\n            return <option key={id} value={id}>{name}</option>;\r\n          })}\r\n        </select>\r\n      </div>\r\n\r\n      {/* รหัสไปรษณีย์: เติมจากตำบล (ถ้าจะให้แก้เองได้ ให้เอา readOnly ออกจาก Addresses.js) */}\r\n      <input\r\n        placeholder=\"รหัสไปรษณีย์\"\r\n        value={value?.postal_code || ''}\r\n        onChange={e => patch({ postal_code: e.target.value })}\r\n        disabled={disabled || !!errMsg}\r\n      />\r\n\r\n      {/* Debug เล็กๆ */}\r\n      {baseUsed ? <small style={{ color:'#999' }}>ใช้ข้อมูลจาก: <code>{baseUsed || '/'}</code></small> : null}\r\n      {errMsg   ? <small style={{ color:'#c00' }}>{errMsg}</small> : null}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}