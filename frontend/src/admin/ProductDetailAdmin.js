import React, { useEffect, useState } from "react";
import { useParams, Link } from "react-router-dom";
import { api, mediaSrc } from "../lib/api";
import "./product-detail-admin.css";

export default function ProductDetailAdmin() {
  const { id } = useParams();
  const [product, setProduct] = useState(null);
  const [images, setImages] = useState([]);
  const [stocks, setStocks] = useState([]);
  const [sales, setSales] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const load = async () => {
      try {
        // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        const pRes = await api.get(`/api/admin/products/${id}`);
        setProduct(pRes.data);
        setImages(pRes.data.images || pRes.data.product_images || []);

        // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏•‡πá‡∏≠‡∏ï
        try {
          const inv = await api.get(`/api/inventory?product_id=${id}`);
          if (Array.isArray(inv.data)) setStocks(inv.data);
          else if (Array.isArray(inv.data.items)) setStocks(inv.data.items);
        } catch (err) {
          console.warn("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡πá‡∏≠‡∏Å:", err);
        }

        // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢
        try {
          const sale = await api.get(`/api/admin/orders?product_id=${id}`);
          if (Array.isArray(sale.data)) setSales(sale.data);
          else if (Array.isArray(sale.data.items)) setSales(sale.data.items);
        } catch (err) {
          console.warn("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢:", err);
        }
      } catch (err) {
        console.error(err);
        alert("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      } finally {
        setLoading(false);
      }
    };
    load();
  }, [id]);

  if (loading) return <div className="pd-wrapper"><p>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p></div>;
  if (!product) return <div className="pd-wrapper"><p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</p></div>;

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°
  const totalProfit = sales.reduce((sum, s) => sum + (Number(s.profit || 0)), 0);

  return (
    <div className="pd-wrapper">
      <div className="pd-card">
        <h1 className="pd-title">{product.product_name}</h1>
        <p className="pd-subtitle">{product.category_name} / {product.subcategory_name}</p>

        {/* üéû ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô */}
        <div className="pd-gallery">
          <div className="pd-scroll">
            {images.length > 0 ? (
              images.map((im, i) => (
                <img key={i} src={mediaSrc(im.url || im.path)} alt="product" />
              ))
            ) : (
              <div className="pd-placeholder">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</div>
            )}
          </div>
        </div>

        {/* üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
        <div className="pd-info">
          <div><strong>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</strong> {product.category_name}</div>
          <div><strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ã‡∏∑‡πâ‡∏≠:</strong> ‡∏ø{product.cost_price ?? "-"}</div>
          <div><strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢:</strong> ‡∏ø{product.price ?? "-"}</div>
          <div><strong>‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏£‡∏ß‡∏°:</strong> {product.live_stock ?? product.stock ?? 0}</div>
          <div><strong>‡∏´‡∏ô‡πà‡∏ß‡∏¢:</strong> {product.product_unit_name}</div>
          <div><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> {product.product_status_name}</div>
          <div><strong>‡∏ï‡πâ‡∏ô‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î:</strong> {product.origin || "-"}</div>
          <div><strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</strong><br />{product.description || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"}</div>
        </div>

        {/* üß© ‡∏£‡∏∏‡πà‡∏ô‡∏¢‡πà‡∏≠‡∏¢ */}
        {Array.isArray(product.variants) && product.variants.length > 0 && (
          <div className="pd-section">
            <h3>‡∏£‡∏∏‡πà‡∏ô‡∏¢‡πà‡∏≠‡∏¢ (Variants)</h3>
            <table className="pd-table">
              <thead>
                <tr><th>SKU</th><th>‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏∏‡πà‡∏ô</th><th>‡∏£‡∏≤‡∏Ñ‡∏≤</th><th>‡∏™‡∏ï‡πá‡∏≠‡∏Å</th></tr>
              </thead>
              <tbody>
                {product.variants.map((v) => (
                  <tr key={v.variant_id}>
                    <td>{v.sku}</td>
                    <td>{v.variant_name || "-"}</td>
                    <td>‡∏ø{v.price ?? "-"}</td>
                    <td>{v.stock ?? 0}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}

        {/* üì¶ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏•‡πá‡∏≠‡∏ï */}
        {stocks.length > 0 && (
          <div className="pd-section">
            <h3>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏•‡πá‡∏≠‡∏ï</h3>
            <table className="pd-table">
              <thead>
                <tr>
                  <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤</th>
                  <th>‡∏•‡πá‡∏≠‡∏ï</th>
                  <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤</th>
                  <th>‡∏Ç‡∏≤‡∏¢‡πÑ‡∏õ</th>
                  <th>‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠</th>
                  <th>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏∏‡∏ô</th>
                  <th>‡∏Å‡∏≥‡πÑ‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢</th>
                  <th>‡∏£‡∏ß‡∏°‡∏Å‡∏≥‡πÑ‡∏£</th>
                </tr>
              </thead>
              <tbody>
                {stocks.map((s, i) => {
                  const profit = (s.selling_price - s.cost_price) * s.qty_remaining;
                  return (
                    <tr key={i}>
                      <td>{new Date(s.created_at).toLocaleDateString()}</td>
                      <td>{s.lot_code || "-"}</td>
                      <td>{s.qty_in ?? 0}</td>
                      <td>{s.qty_out ?? 0}</td>
                      <td>{s.qty_remaining ?? 0}</td>
                      <td>‡∏ø{s.cost_price ?? "-"}</td>
                      <td>‡∏ø{(s.selling_price - s.cost_price) || "-"}</td>
                      <td>‡∏ø{profit ?? "-"}</td>
                    </tr>
                  );
                })}
              </tbody>
            </table>
          </div>
        )}

        {/* üí∞ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ */}
        {sales.length > 0 && (
          <div className="pd-section">
            <h3>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h3>
            <table className="pd-table">
              <thead>
                <tr><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</th><th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th><th>‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢</th><th>‡∏Å‡∏≥‡πÑ‡∏£</th></tr>
              </thead>
              <tbody>
                {sales.map((o, i) => (
                  <tr key={i}>
                    <td>{new Date(o.created_at).toLocaleDateString()}</td>
                    <td>{o.order_id || o.id}</td>
                    <td>{o.total_qty || o.quantity || "-"}</td>
                    <td>‡∏ø{o.total_price || o.grand_total}</td>
                    <td>‡∏ø{o.profit ?? "-"}</td>
                  </tr>
                ))}
              </tbody>
              <tfoot>
                <tr><th colSpan="4">‡∏£‡∏ß‡∏°‡∏Å‡∏≥‡πÑ‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</th><th>‡∏ø{totalProfit}</th></tr>
              </tfoot>
            </table>
          </div>
        )}

        <Link to="/admin/products/all" className="pd-back">‚¨Ö ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</Link>
      </div>
    </div>
  );
}
