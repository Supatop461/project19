// src/pages/HomeUser.js
import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import axios from 'axios';
import './HomeUser.css';
import { addItem as addToCart } from '../lib/cart';

/* ---------- helpers: API path & absolute image URL ---------- */
const apiPath = (p) =>
  (axios.defaults.baseURL || '').replace(/\/+$/, '').endsWith('/api') ? p : '/api' + p;

const backendOrigin = (() => {
  const base = axios.defaults.baseURL || 'http://localhost:3001/api';
  try {
    const u = new URL(base);
    // ‡∏ï‡∏±‡∏î /api ‡∏≠‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡πÑ‡∏ü‡∏•‡πå‡∏™‡πÄ‡∏ï‡∏ï‡∏¥‡∏Å‡∏à‡∏≤‡∏Å root (‡πÄ‡∏ä‡πà‡∏ô /uploads/..)
    return u.origin + (u.pathname.replace(/\/api\/?$/, '') || '');
  } catch {
    return 'http://localhost:3001';
  }
})();
const absUrl = (u) => {
  if (!u) return '';
  if (/^https?:\/\//i.test(u)) return u;
  if (u.startsWith('/')) return backendOrigin + u;
  return `${backendOrigin}/${u.replace(/^\.?\//, '')}`;
};

const toArray = (d) =>
  Array.isArray(d) ? d :
  Array.isArray(d?.data) ? d.data :
  Array.isArray(d?.rows) ? d.rows : [];

/* ---------- map DB ‚Üí UI ---------- */
const normalizeProduct = (p, idx) => {
  const img =
    p.image_url || p.cover_url || p.image || (Array.isArray(p.images) ? p.images[0] : '');
  return {
    id:    p.product_id ?? p.id ?? `p-${idx}`,
    name:  p.product_name ?? p.name_th ?? p.name ?? p.title ?? '',
    price: Number(p.min_price ?? p.selling_price ?? p.price ?? p.unit_price ?? p.product_price ?? 0),
    img:   img ? absUrl(img) : '',
  };
};

const normalizeCategory = (c, idx) => {
  const cid  = c.category_id ?? c.id ?? c.code ?? c.slug ?? `cat-${idx}`;
  const name = c.category_name ?? c.name_th ?? c.name ?? '';
  // ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö mapping ro1‚Üíplants, ro2‚Üítools ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏Å‡∏•‡∏á
  const forcedSlug = String(cid) === 'ro1' ? 'plants' : (String(cid) === 'ro2' ? 'tools' : null);
  const slug = forcedSlug ?? (c.slug ? String(c.slug).toLowerCase() : String(cid).toLowerCase());
  const img  = c.image_url || c.image || c.cover || c.thumbnail || '';
  return { id: String(cid), slug, name, image: img ? absUrl(img) : '' };
};

/* ---------- ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏î‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏¥‡πâ‡∏ô (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢) ---------- */
async function fetchWithCount(url, want) {
  const paramSets = [
    { limit: want }, { take: want }, { per_page: want }, { pageSize: want }, { top: want }, {}
  ];
  for (const ps of paramSets) {
    try {
      const r = await axios.get(url, { params: { ...ps, _: Date.now() } });
      const arr = toArray(r.data);
      if (arr.length) return arr;
    } catch (_) {}
  }
  return [];
}

export default function HomeUser() {
  const [categories, setCategories]   = useState([]);
  const [bestSellers, setBestSellers] = useState([]); // 5 ‡∏ä‡∏¥‡πâ‡∏ô‡∏à‡∏≤‡∏Å DB ‡∏à‡∏£‡∏¥‡∏á
  const [allProducts, setAllProducts] = useState([]); // ‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏£‡∏ß‡∏°‡∏à‡∏≤‡∏Å DB ‡∏à‡∏£‡∏¥‡∏á
  const [loading, setLoading]         = useState({ cat: true, best: true, all: true });
  const [err, setErr]                 = useState({ cat: '', best: '', all: '' });

  /* ---------- ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ---------- */
  useEffect(() => {
    (async () => {
      try {
        setLoading(s => ({ ...s, cat: true }));
        let res = null;
        try {
          res = await axios.get(apiPath('/categories'), { params: { status: 'active', _: Date.now() } });
        } catch {
          try { res = await axios.get(apiPath('/categories'), { params: { published: 1, _: Date.now() } }); }
          catch { res = await axios.get(apiPath('/categories'), { params: { _: Date.now() } }); }
        }
        const list = toArray(res.data).map(normalizeCategory).filter(x => x.id && x.name);
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡πâ plants ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢ tools
        const order = ['plants', 'tools'];
        list.sort((a, b) => order.indexOf(a.slug) - order.indexOf(b.slug));
        setCategories(list.filter(c => ['plants','tools'].includes(c.slug)).slice(0, 2));
        if (!list.length) setErr(e => ({ ...e, cat: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏î‡∏á' }));
      } catch {
        setCategories([]);
        setErr(e => ({ ...e, cat: '‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' }));
      } finally {
        setLoading(s => ({ ...s, cat: false }));
      }
    })();
  }, []);

  /* ---------- ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ (‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏à‡∏≤‡∏Å endpoint ‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ‡∏à‡∏£‡∏¥‡∏á‡∏Å‡πà‡∏≠‡∏ô) ---------- */
  useEffect(() => {
    (async () => {
      try {
        setLoading(s => ({ ...s, best: true }));
        const endpoints = [
          apiPath('/products?featured=1'),
          apiPath('/products?sort=popular'),
          // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏°‡∏µ route ‡πÄ‡∏â‡∏û‡∏≤‡∏∞
          apiPath('/products/best-sellers'),
          // fallback ‡∏£‡∏ß‡∏°
          apiPath('/products'),
        ];
        let bag = [];
        for (const ep of endpoints) {
          const got = await fetchWithCount(ep, 5);
          if (got.length) bag = bag.concat(got);
          if (bag.length >= 5) break;
        }
        const list = bag.map((p, i) => normalizeProduct(p, i))
                        .filter(x => x.id && x.name)
                        .slice(0, 5);
        setBestSellers(list);
        if (!list.length) setErr(e => ({ ...e, best: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ‡∏´‡∏£‡∏∑‡∏≠ API ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•' }));
      } catch {
        setBestSellers([]);
        setErr(e => ({ ...e, best: '‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' }));
      } finally {
        setLoading(s => ({ ...s, best: false }));
      }
    })();
  }, []);

  /* ---------- ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏Ç‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô) ---------- */
  useEffect(() => {
    (async () => {
      try {
        setLoading(s => ({ ...s, all: true }));
        // ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° endpoint ‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏£‡∏¥‡∏á
        const endpoints = [
          apiPath('/products'),     // ‚úÖ ‡∏°‡∏µ‡∏à‡∏£‡∏¥‡∏á
          // ‚ùå ‡∏ï‡∏±‡∏î /products/all ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ 404 ‡πÉ‡∏ô log
        ];
        let items = [];
        for (const ep of endpoints) {
          const got = await fetchWithCount(ep, 60);
          if (got.length) items = items.concat(got);
          if (items.length >= 12) break;
        }
        // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏ô‡πâ‡∏≠‡∏¢ ‚Üí ‡∏•‡∏≠‡∏á‡∏¢‡∏¥‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î plants/tools ‡πÅ‡∏ö‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå category (‚úÖ ‡∏°‡∏µ‡∏à‡∏£‡∏¥‡∏á)
        if (items.length < 12) {
          const keys = (categories.length ? categories : []).map(c => c.slug || c.id);
          for (const key of keys) {
            const q = encodeURIComponent(key === 'plants' ? 'ro1' : key === 'tools' ? 'ro2' : key);
            const catUrl = apiPath(`/products?category=${q}`);
            const more = await fetchWithCount(catUrl, 30);
            if (more.length) items = items.concat(more);
            if (items.length >= 12) break;
          }
        }
        // ‡∏•‡∏ö‡∏ã‡πâ‡∏≥ + ‡πÄ‡∏£‡∏µ‡∏¢‡∏á id ‡πÉ‡∏´‡∏°‡πà ‚Üí ‡πÄ‡∏Å‡πà‡∏≤‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
        const seen = new Set();
        const list = items
          .map((p, i) => normalizeProduct(p, i))
          .filter(x => x.id && x.name && !seen.has(x.id) && seen.add(x.id));
        list.sort((a, b) => {
          const ai = Number(a.id), bi = Number(b.id);
          if (Number.isFinite(ai) && Number.isFinite(bi)) return bi - ai;
          return 0;
        });
        setAllProducts(list);
        if (!list.length) setErr(e => ({ ...e, all: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠ API ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•' }));
      } catch {
        setAllProducts([]);
        setErr(e => ({ ...e, all: '‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' }));
      } finally {
        setLoading(s => ({ ...s, all: false }));
      }
    })();
  }, [categories]);

  return (
    <div className="home-container">
      {/* Search */}
      <div className="search-box">
        <input type="text" placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤" />
        <button className="search-btn">üîç</button>
      </div>

      {/* Hero */}
      <section
        className="hero"
        style={{
          backgroundImage: `url(${process.env.PUBLIC_URL + '/p2.png'})`,
          backgroundRepeat: 'no-repeat',
          backgroundPosition: 'center',
          backgroundSize: 'cover',
        }}
      >
        <div className="hero-text">
          <h1>‚Äú<span className="highlight">‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡∏£‡∏≤‡∏ä‡∏ç‡πå‡πÅ‡∏°‡πà‡πÇ‡∏à‡πâ</span>‚Äù</h1>
          <p>‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ú‡∏•‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢ ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏õ‡∏•‡∏π‡∏Å ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 100 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
        </div>
      </section>

      {/* Categories */}
      <section className="categories">
        {loading.cat ? null :
         categories.length ? (
           categories.map((cat) => (
             <Link
               key={cat.id}
               to={cat.slug === 'plants'
                    ? '/plants'
                    : cat.slug === 'tools'
                      ? '/tools'
                      : `/products?category=${encodeURIComponent(cat.slug || cat.id)}`}
               className="category-card"
               title={cat.name}
             >
               {cat.image ? (
                 <img src={cat.image} alt={cat.name} />
               ) : (
                 <div style={{height:160,display:'grid',placeItems:'center',background:'#eef5ef'}}>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ</div>
               )}
               <p>{cat.name}</p>
             </Link>
           ))
         ) : (
           <div className="info-inline">{err.cat || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà'}</div>
         )}
      </section>

      {/* Best Sellers */}
      <section className="best-sellers">
        <h2>üåü ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ</h2>
        {loading.best ? (
          <div className="info-inline">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‚Ä¶</div>
        ) : bestSellers.length ? (
          <div className="product-grid">
            {bestSellers.map((item) => (
              <div className="product-card" key={item.id}>
                {item.img ? (
                  <img src={item.img} alt={item.name} />
                ) : (
                  <div style={{height:180,display:'grid',placeItems:'center',background:'#eef5ef'}}>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ</div>
                )}
                <h3>{item.name}</h3>
                <p>{Number(item.price || 0).toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
                <button className="btn-add" onClick={() => addToCart(item)}>
                  + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                </button>
              </div>
            ))}
          </div>
        ) : (
          <div className="info-inline">{err.best || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ'}</div>
        )}
      </section>

      {/* All products */}
      <section className="all-products">
        <h2>üõí ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h2>
        {loading.all ? (
          <div className="info-inline">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‚Ä¶</div>
        ) : allProducts.length ? (
          <div className="product-grid">
            {allProducts.map((p) => (
              <div className="product-card" key={p.id}>
                {p.img ? (
                  <img src={p.img} alt={p.name} />
                ) : (
                  <div style={{height:180,display:'grid',placeItems:'center',background:'#eef5ef'}}>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ</div>
                )}
                <h3>{p.name}</h3>
                <p>{Number(p.price || 0).toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
                <button className="btn-add" onClick={() => addToCart(p)}>
                  + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                </button>
              </div>
            ))}
          </div>
        ) : (
          <div className="info-inline">{err.all || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'}</div>
        )}
      </section>
    </div>
  );
}
